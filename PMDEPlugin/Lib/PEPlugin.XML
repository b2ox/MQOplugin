<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PEPlugin</name>
    </assembly>
    <members>
        <member name="T:PEPlugin.IPESystemConnector">
            <summary>
            プラグインシステム情報インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.PEPluginAssemblyVersion">
            <summary>PEプラグインのアセンブリバージョン</summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.PEPluginAssemblyPath">
            <summary>PEプラグインアセンブリのDLLパス</summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.DefaultPluginFolderPath">
            <summary>プラグインDLLの標準格納フォルダパス</summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.HostApplicationPath">
            <summary>プラグインホストのアプリケーションパス</summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.SlimDXAssemblyPath">
            <summary>SlimDXアセンブリのDLLパス</summary>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.RegisteredPluginCount">
            <summary>登録されているプラグイン数</summary>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.FindRegisteredPluginsFromMenuText(System.String,System.Boolean)">
            <summary>
            登録プラグインをメニューへの登録テキストから検索(プラグイン序数を取得／対象がない場合:null)
            </summary>
            <param name="menuText">登録テキスト</param>
            <param name="contains">true:一部でも含まれている対象を列挙 false:完全一致のみ</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.GetPluginInfo(System.Int32)">
            <summary>
            登録プラグインの情報取得
            </summary>
            <param name="n">プラグイン序数(0～RegisteredPluginCount-1)</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.RunPlugin(System.Int32)">
            <summary>
            登録プラグインの実行(メニューからの呼び出し処理と同様／起動時実行はできません)
            </summary>
            <param name="n">プラグイン序数(0～RegisteredPluginCount-1)</param>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.SetShareObject(System.String,System.Object)">
            <summary>
            プラグイン共有オブジェクトに追加登録(任意のプラグイン間でのデータの受け渡し用／キー登録済みの場合:false)
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="obj">オブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.GetShareObject(System.String,System.Boolean)">
            <summary>
            プラグイン共有オブジェクトから取得(キー対象がない場合:null)
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="clear">true:取得後共有オブジェクトから削除</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.RemoveShareObject(System.String)">
            <summary>
            プラグイン共有オブジェクトから削除(キー対象がない場合:false)
            </summary>
            <param name="key">任意のキー文字列</param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.IPESystemConnector.RegisteredCPluginCount">
            <summary>登録されているCプラグイン数</summary>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.GetCPluginInfo(System.Int32)">
            <summary>
            登録Cプラグインの情報取得
            </summary>
            <param name="n">プラグイン序数(0～RegisteredCPluginCount-1)</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.RunCPlugin(System.Int32)">
            <summary>
            登録Cプラグインの実行(メニューからの呼び出し処理と同様)
            </summary>
            <param name="n">プラグイン序数(0～RegisteredCPluginCount-1)</param>
        </member>
        <member name="M:PEPlugin.IPESystemConnector.GetCPluginRunArgsClone(System.String)">
            <summary>
            ※利用非推奨 | IPXCPluginRunArgs (アクセス用複製)オブジェクトの取得
            </summary>
            <param name="modulePath">ModulePath に設定されるパス文字列</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.IPERegisteredPluginInfo">
            <summary>登録プラグイン情報</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.Name">
            <summary>プラグイン名(メニュー登録名ではないので注意:メニューテキストは Option.RegisterMenuText)</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.Version">
            <summary>バージョン情報</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.Description">
            <summary>説明</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.Option">
            <summary>起動オプション</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.AssemblyPath">
            <summary>アセンブリファイルのパス</summary>
        </member>
        <member name="P:PEPlugin.IPERegisteredPluginInfo.ClassName">
            <summary>クラスの名前</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXPmxConnector">
            <summary>
            プラグインPMX操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.GetCurrentState">
            <summary>現在のPMXデータの状態複製を取得(直接参照ではないので注意)</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmxConnector.CurrentPath">
            <summary>現在オープン中のPMXファイルのパス get/set</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.Update(PEPlugin.Pmx.IPXPmx)">
            <summary>
            ホスト側のPMXデータを更新
            </summary>
            <param name="px">更新用プラグインPMX</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.Update(PEPlugin.Pmx.IPXPmx,PEPlugin.Pmx.PmxUpdateObject,System.Int32)">
            <summary>
            ホスト側のPMXデータを個別更新(負数指定の場合はリスト全て)
            </summary>
            <param name="px">更新用プラグインPMX</param>
            <param name="obj">更新対象</param>
            <param name="index">対象Index(負数の場合はリスト全て)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.Update(PEPlugin.Pmx.IPXPmx,PEPlugin.Pmx.PmxUpdateObject,System.Int32[])">
            <summary>
            ホスト側のPMXデータを任意更新
            </summary>
            <param name="px">更新用プラグインPMX</param>
            <param name="obj">更新対象</param>
            <param name="indices">任意の対象Index</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.LockUndo">
            <summary>更新時にUndo登録処理を行わないようにロック</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmxConnector.UnlockUndo">
            <summary>Undo処理のロックを解除</summary>
        </member>
        <member name="T:PEPlugin.Pmx.PmxUpdateObject">
            <summary>
            PMX更新対象
            </summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.None">
            <summary>無効</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.All">
            <summary>全項目</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Header">
            <summary>ヘッダ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.ModelInfo">
            <summary>モデル情報</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Vertex">
            <summary>頂点</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Face">
            <summary>面(一括更新のみ)</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Material">
            <summary>材質</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Bone">
            <summary>ボーン</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Morph">
            <summary>モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Node">
            <summary>表示枠(一括更新のみ)</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Body">
            <summary>剛体</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.Joint">
            <summary>Joint</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PmxUpdateObject.SoftBody">
            <summary>SoftBody</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXPmx">
            <summary>
            プラグイン用PMXインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Header">
            <summary>ヘッダ get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.ModelInfo">
            <summary>モデル情報 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Vertex">
            <summary>頂点リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Material">
            <summary>材質リスト(各材質内に対応した面リストを格納) get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Bone">
            <summary>ボーンリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Morph">
            <summary>モーフリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.RootNode">
            <summary>ルート用表示枠(システム管理用) get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.ExpressionNode">
            <summary>表情枠(システム管理用) get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Node">
            <summary>表示枠リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Body">
            <summary>剛体リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Joint">
            <summary>Jointリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.SoftBody">
            <summary>SoftBodyリスト get</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.Normalize">
            <summary>
            正規化 - 未参照のオブジェクト関係を初期化します(Update時は内部で自動的に正規化します)
            
            正規化手順
            1.参照先頂点が存在しない場合 -> 面:削除 頂点／UVモーフ:オフセット削除
            2.参照先ボーンが存在しない場合 -> 頂点:-1 ボーン親:-1 ボーン子:-1 IK_Target:非IK化 IK_Link:Link削除 ボーンモーフ:オフセット削除 ボーン枠:削除 剛体:-1
            3.参照先モーフが存在しない場合 -> グループモーフ:オフセット削除 モーフ枠:削除
            4.参照先剛体が存在しない場合 -> Joint:-1
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.Primitive">
            <summary>プリミティブ作成／Cプラグインからは利用不可 get</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.Clear">
            <summary>初期化</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXPmx.FilePath">
            <summary>ファイルパス(FromFile()で読み込む場合自動設定:各プレビュー処理に使用)</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.FromFile(System.String)">
            <summary>ファイルから読み込み</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.ToFile(System.String)">
            <summary>ファイルへ保存</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.FromStream(System.IO.Stream)">
            <summary>ストリームから読み込み</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPmx.ToStream(System.IO.Stream)">
            <summary>ストリームへ保存(書き出し分だけストリーム位置は進むので注意)</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXHeader">
            <summary>
            PMXヘッダインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXHeader.Version">
            <summary>PMXバージョン(2.0/2.1有効) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXHeader.StringEncode">
            <summary>文字エンコード(0:UFT16 1:UTF8) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXHeader.UVACount">
            <summary>追加UV数(0～4) get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXModelInfo">
            <summary>モデル情報インターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXModelInfo.ModelName">
            <summary>モデル名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXModelInfo.ModelNameE">
            <summary>モデル名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXModelInfo.Comment">
            <summary>コメント get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXModelInfo.CommentE">
            <summary>コメント(英) get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXVertex">
            <summary>
            PMX頂点インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Position">
            <summary>座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Normal">
            <summary>法線 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.UV">
            <summary>TexUV座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.UVA1">
            <summary>追加UV1座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.UVA2">
            <summary>追加UV1座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.UVA3">
            <summary>追加UV1座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.UVA4">
            <summary>追加UV1座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Bone1">
            <summary>ウェイト関連ボーン1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Bone2">
            <summary>ウェイト関連ボーン2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Bone3">
            <summary>ウェイト関連ボーン3 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Bone4">
            <summary>ウェイト関連ボーン4 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Weight1">
            <summary>ウェイト1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Weight2">
            <summary>ウェイト2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Weight3">
            <summary>ウェイト3 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.Weight4">
            <summary>ウェイト4 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.QDEF">
            <summary>QDEF状態 | SDEF優先 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.SDEF">
            <summary>SDEF状態 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.SDEF_C">
            <summary>SDEF-C:回転中心 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.SDEF_R0">
            <summary>SDEF-R0 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.SDEF_R1">
            <summary>SDEF-R1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertex.EdgeScale">
            <summary>エッジ倍率 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXFace">
            <summary>
            PMX面インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXFace.Vertex1">
            <summary>頂点1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXFace.Vertex2">
            <summary>頂点2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXFace.Vertex3">
            <summary>頂点3 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.SphereType">
            <summary>スフィアモード</summary>
        </member>
        <member name="T:PEPlugin.Pmx.PrimitiveType">
            <summary>描画プリミティブタイプ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PrimitiveType.Tri">
            <summary>TriangleList</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PrimitiveType.Point">
            <summary>PointList</summary>
        </member>
        <member name="F:PEPlugin.Pmx.PrimitiveType.Line">
            <summary>LineList</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXMaterial">
            <summary>
            PMX材質インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Name">
            <summary>材質名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.NameE">
            <summary>材質名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Diffuse">
            <summary>Diffuse get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Specular">
            <summary>Specular get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Ambient">
            <summary>Ambient get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Power">
            <summary>反射強度 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.BothDraw">
            <summary>両面描画 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Shadow">
            <summary>地面影描画 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.SelfShadowMap">
            <summary>シャドウマップへの描画 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.SelfShadow">
            <summary>セルフシャドウ描画 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.VertexColor">
            <summary>頂点カラー get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.PrimitiveType">
            <summary>描画プリミティブタイプ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Edge">
            <summary>エッジフラグ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.EdgeColor">
            <summary>エッジ色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.EdgeSize">
            <summary>エッジサイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Tex">
            <summary>テクスチャ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Sphere">
            <summary>スフィアテクスチャ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.SphereMode">
            <summary>スフィアモード get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Toon">
            <summary>Toonテクスチャ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Memo">
            <summary>メモ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterial.Faces">
            <summary>材質内の面リスト get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXBone">
            <summary>
            PMXボーンインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Name">
            <summary>ボーン名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.NameE">
            <summary>ボーン名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Position">
            <summary>ボーン座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Parent">
            <summary>親ボーン(親なし:null) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.ToBone">
            <summary>表示先(ボーン指定:設定時にTo_Bone/To_Offset一方のみ有効選択) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.ToOffset">
            <summary>表示先(オフセット座標指定:設定時にTo_Bone/To_Offset一方のみ有効選択) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsRotation">
            <summary>回転可 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsTranslation">
            <summary>移動可 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Visible">
            <summary>表示／非表示 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Controllable">
            <summary>操作可 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsAppendLocal">
            <summary>親付与ローカル get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsAppendRotation">
            <summary>回転付与 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsAppendTranslation">
            <summary>移動付与 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsFixAxis">
            <summary>軸制限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsLocalFrame">
            <summary>ローカル軸設定 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsAfterPhysics">
            <summary>物理演算後変形 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsExternal">
            <summary>外部変形 get/set</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXBone.SetPMDBoneKind(PEPlugin.Pmd.BoneKind)">
            <summary>
            PMD用のボーン種類で性能設定
            </summary>
            <param name="kind">PMDボーン種類</param>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.Level">
            <summary>変形階層 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.AppendParent">
            <summary>付与親ボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.AppendRatio">
            <summary>付与率 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.FixAxis">
            <summary>制限軸 get/set</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXBone.SetLocalAxis(PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            ローカル軸の設定
            </summary>
            <param name="x">ローカルX軸</param>
            <param name="z">ローカルZ軸</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXBone.GetLocalAxis(PEPlugin.SDX.V3@,PEPlugin.SDX.V3@,PEPlugin.SDX.V3@)">
            <summary>
            ローカル軸の取得
            </summary>
            <param name="x">ローカルX軸</param>
            <param name="y">ローカルY軸</param>
            <param name="z">ローカルZ軸</param>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.ExternalKey">
            <summary>外部Key get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IsIK">
            <summary>IK get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBone.IK">
            <summary>IK get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXIK">
            <summary>
            PMX IKインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIK.Target">
            <summary>接続先ボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIK.LoopCount">
            <summary>IKループ回数 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIK.Angle">
            <summary>IK処理での単位角(ラジアン角) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIK.Links">
            <summary>IKリンクリスト get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXIKLink">
            <summary>PMX IKLinkインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIKLink.Bone">
            <summary>リンクボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIKLink.IsLimit">
            <summary>制限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIKLink.Low">
            <summary>制限角小 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXIKLink.High">
            <summary>制限角大 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXMorph">
            <summary>
            PMXモーフインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.Name">
            <summary>モーフ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.NameE">
            <summary>モーフ名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.Panel">
            <summary>モーフパネル 0:システム予約 1:眉(左下) 2:目(左上) 3:口(右上) 4:その他(右下) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.Kind">
            <summary>モーフ種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsVertex">
            <summary>頂点モーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsUV">
            <summary>UVモーフ判定(UVモーフ全てが対象) get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsBone">
            <summary>ボーンモーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsMaterial">
            <summary>材質モーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsGroup">
            <summary>グループモーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsFlip">
            <summary>フリップモーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.IsImpulse">
            <summary>インパルスモーフ判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorph.Offsets">
            <summary>モーフオフセット get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.MorphKind">
            <summary>PMXモーフ種類</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Group">
            <summary>グループモーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Vertex">
            <summary>頂点モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Bone">
            <summary>ボーンモーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.UV">
            <summary>UV(Tex)モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.UVA1">
            <summary>追加UV1モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.UVA2">
            <summary>追加UV2モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.UVA3">
            <summary>追加UV3モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.UVA4">
            <summary>追加UV4モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Material">
            <summary>材質モーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Flip">
            <summary>フリップモーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.MorphKind.Impulse">
            <summary>インパルスモーフ</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXMorphOffset">
            <summary>PMXモーフオフセット基底インターフェイス</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXVertexMorphOffset">
            <summary>PMX頂点モーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertexMorphOffset.Vertex">
            <summary>対象頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXVertexMorphOffset.Offset">
            <summary>座標オフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXUVMorphOffset">
            <summary>PMXUVモーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXUVMorphOffset.Vertex">
            <summary>対象頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXUVMorphOffset.Offset">
            <summary>UVオフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXBoneMorphOffset">
            <summary>PMXボーンモーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBoneMorphOffset.Bone">
            <summary>対象ボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBoneMorphOffset.Translation">
            <summary>移動オフセット get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBoneMorphOffset.Rotation">
            <summary>回転オフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXImpulseMorphOffset">
            <summary>PMXインパルスモーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXImpulseMorphOffset.Body">
            <summary>対象剛体 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXImpulseMorphOffset.Local">
            <summary>ローカル設定 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXImpulseMorphOffset.Velocity">
            <summary>速度オフセット get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXImpulseMorphOffset.Torque">
            <summary>トルクオフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXMaterialMorphOffset">
            <summary>PMX材質モーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Material">
            <summary>対象材質 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Op">
            <summary>演算タイプ 0:乗算 1:加算 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Diffuse">
            <summary>Diffuse get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Specular">
            <summary>Specular get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Ambient">
            <summary>Ambient get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Power">
            <summary>反射強度 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.EdgeSize">
            <summary>エッジサイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.EdgeColor">
            <summary>エッジ色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Tex">
            <summary>テクスチャオフセット get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Sphere">
            <summary>スフィアオフセット get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMaterialMorphOffset.Toon">
            <summary>Toonオフセット get/set</summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXMaterialMorphOffset.Clear(System.Single)">
            <summary>
            一括初期化
            </summary>
            <param name="v">初期値</param>
        </member>
        <member name="T:PEPlugin.Pmx.IPXGroupMorphOffset">
            <summary>PMXグループ／フリップモーフオフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXGroupMorphOffset.Morph">
            <summary>対象モーフ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXGroupMorphOffset.Ratio">
            <summary>モーフ倍率 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXNode">
            <summary>PMX表示枠インターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNode.Name">
            <summary>フレームカテゴリ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNode.NameE">
            <summary>フレームカテゴリ名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNode.Items">
            <summary>表示枠要素リスト get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXNodeItem">
            <summary>PMX表示枠基底要素</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNodeItem.IsBone">
            <summary>ボーン要素判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNodeItem.IsMorph">
            <summary>モーフ要素判定 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNodeItem.BoneItem">
            <summary>ボーン要素への参照 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXNodeItem.MorphItem">
            <summary>モーフ要素への参照 get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXBoneNodeItem">
            <summary>PMX表示枠ボーン要素</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBoneNodeItem.Bone">
            <summary>対象ボーン get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXMorphNodeItem">
            <summary>PMX表示枠モーフ要素</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXMorphNodeItem.Morph">
            <summary>対象モーフ get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXBody">
            <summary>
            PMX剛体インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Name">
            <summary>剛体名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.NameE">
            <summary>剛体名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Mode">
            <summary>剛体モード get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Bone">
            <summary>ボーン null:関連なし get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Group">
            <summary>グループNo 0~15 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.PassGroup">
            <summary>非衝突グループ | 通常使用用 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.BoxKind">
            <summary>形状種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.BoxSize">
            <summary>
            Boxサイズ get/set
            X -> サイズ1 | Sphere:半径 / Box幅(中心位置からの片側距離) / Capsule:半径
            Y -> サイズ2 | Sphere:null / Box高さ(中心位置からの片側距離) / Capsule:高さ(上下半球を除いた長さ,0以下は×,0指定の場合は0.1)
            Z -> サイズ3 | Sphere:null / Box奥行き(中心位置からの片側距離) / Capsule:nul
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Rotation">
            <summary>回転(ラジアン角) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Mass">
            <summary>質量 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.PositionDamping">
            <summary>移動減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.RotationDamping">
            <summary>回転減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Restitution">
            <summary>反発力 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXBody.Friction">
            <summary>摩擦力 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.JointKind">
            <summary>
            PMX Joint種類
            </summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.Sp6DOF">
            <summary>ﾊﾞﾈ付6DOF</summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.G6DOF">
            <summary>6DOF</summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.P2P">
            <summary>P2P</summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.ConeTwist">
            <summary>ConeTwist</summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.Slider">
            <summary>Slider</summary>
        </member>
        <member name="F:PEPlugin.Pmx.JointKind.Hinge">
            <summary>Hinge</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXJoint">
            <summary>
            PMXJointインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Name">
            <summary>Joint名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.NameE">
            <summary>Joint名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.BodyA">
            <summary>接続剛体1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.BodyB">
            <summary>接続剛体2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Kind">
            <summary>Joint種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Rotation">
            <summary>回転(ラジアン角) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Limit_MoveLow">
            <summary>移動下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Limit_MoveHigh">
            <summary>移動上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Limit_AngleLow">
            <summary>回転下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.Limit_AngleHigh">
            <summary>回転上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.SpringConst_Move">
            <summary>バネ定数-移動 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXJoint.SpringConst_Rotate">
            <summary>バネ定数-回転 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.SoftBodyShape">
            <summary>SoftBodyの形状種類</summary>
        </member>
        <member name="F:PEPlugin.Pmx.SoftBodyShape.TriMesh">
            <summary>△メッシュ</summary>
        </member>
        <member name="F:PEPlugin.Pmx.SoftBodyShape.Rope">
            <summary>ロープ</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXSoftBody">
            <summary>PMX SoftBodyインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Name">
            <summary>SoftBody名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.NameE">
            <summary>SoftBody名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Shape">
            <summary>形状 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Material">
            <summary>対応材質 null:関連なし get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Group">
            <summary>グループNo 0~15 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.PassGroup">
            <summary>非衝突グループ | 通常使用用 get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.GenerateBendingLinks">
            <summary>BendingLink 生成 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.GenerateClusters">
            <summary>クラスタ生成 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.RandomizeConstraints">
            <summary>リンク交雑 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.BendingLinkDistance">
            <summary>BendingLink 生成距離 | 2は特殊指定 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.ClusterCount">
            <summary>生成クラスタ数 | 0:適用 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.TotalMass">
            <summary>総質量 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Margin">
            <summary>衝突マージン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.AeroModel">
            <summary>風圧計算モデル get/set | 0:V_Point, 1:V_TwoSided, 2:V_OneSided, 3:F_TwoSided, 4:F_OneSided</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.VCF">
            <summary>Config系 | その他省略 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.LST">
            <summary>MaterialConfig系 | その他省略 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Anchors">
            <summary>剛体アンカーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBody.Pins">
            <summary>Pin頂点リスト get</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXSoftBodyAnchor">
            <summary>PMX SoftBody剛体アンカーインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBodyAnchor.Body">
            <summary>剛体 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBodyAnchor.Vertex">
            <summary>対応頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmx.IPXSoftBodyAnchor.Near">
            <summary>Nearモード get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmx.IPXPrimitiveBuilder">
            <summary>
            PMXプリミティブ作成
            </summary>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddPlane(System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean,PEPlugin.Pmx.IPXBone)">
            <summary>
            平面の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="uc">u分解数</param>
            <param name="vc">v分解数</param>
            <param name="dir">面方向 0:XY 1:XZ 2:YZ</param>
            <param name="uv">UV設定</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddBox(System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Single,PEPlugin.Pmx.IPXBone)">
            <summary>
            箱の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="depth">奥行</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddSphere(System.Int32,PEPlugin.SDX.V3,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            球の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r">半径</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddCylinder(System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            柱の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">半径上</param>
            <param name="r2">半径下</param>
            <param name="length">高</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddTorus(System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            トーラスの追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">内径</param>
            <param name="r2">外経</param>
            <param name="sides">分割数(外枠)</param>
            <param name="rings">分割数(内輪)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmx.IPXPrimitiveBuilder.AddText(System.Int32,PEPlugin.SDX.V3,System.Drawing.Font,System.String,System.Single,System.Single,PEPlugin.Pmx.IPXBone)">
            <summary>
            テキストの追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="font">フォント(フォント名／サイズのみ有効)</param>
            <param name="text">テキスト</param>
            <param name="d">偏差</param>
            <param name="ex">厚み</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="T:PEPlugin.IPEConnector">
            <summary>
            操作コネクタインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.IPEConnector.Pmx">
            <summary>PMX操作コネクタ get</summary>
        </member>
        <member name="P:PEPlugin.IPEConnector.Pmd">
            <summary>PMD操作コネクタ get</summary>
        </member>
        <member name="P:PEPlugin.IPEConnector.Form">
            <summary>Form操作コネクタ get</summary>
        </member>
        <member name="P:PEPlugin.IPEConnector.View">
            <summary>View操作コネクタ get</summary>
        </member>
        <member name="P:PEPlugin.IPEConnector.System">
            <summary>システム情報コネクタ</summary>
        </member>
        <member name="T:PEPlugin.View.IPEViewConnector">
            <summary>
            View操作インターフェイス - 旧仕様用につき注意
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PmxView">
            <summary>PmxView操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PmxViewSetting">
            <summary>PmxView表示設定操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PmxViewHelper">
            <summary>PmxViewヘルパ操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.TransformView">
            <summary>TransformView操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.TransformViewSetting">
            <summary>TransformView表示設定操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PMDView">
            <summary>PmxView操作(レガシー対応用) get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PMDViewSetting">
            <summary>PmxView表示設定操作(レガシー対応用) get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewConnector.PMDViewHelper">
            <summary>PmxViewヘルパ操作(レガシー対応用) get</summary>
        </member>
        <member name="T:PEPlugin.View.IPXPmxViewHelper">
            <summary>PmxView関連ヘルパ操作インターフェイス</summary>
        </member>
        <member name="T:PEPlugin.View.IPEPMDViewHelper">
            <summary>
            PMDView関連ヘルパ操作インターフェイス(レガシー対応用)
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.VertexEdit">
            <summary>頂点／ボーン編集操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.PartsSelect">
            <summary>頂点表示／材質編集操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.SubView">
            <summary>サブ画面操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.SubViewSetting">
            <summary>サブ画面表示設定操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.VertexGuide">
            <summary>選択頂点ガイド操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.WeightEdit">
            <summary>ウェイト描画操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.ObjectSelect">
            <summary>選択オブジェクト管理操作 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewHelper.ExtensionEdit">
            <summary>拡張編集操作</summary>
        </member>
        <member name="T:PEPlugin.View.IPEBaseWindowConnector">
            <summary>
            Window表示基底インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEBaseWindowConnector.Visible">
            <summary>表示状態 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEBaseWindowConnector.Location">
            <summary>ウィンドウ表示位置 get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEBaseWindowConnector.Focus">
            <summary>フォーカス設定</summary>
        </member>
        <member name="T:PEPlugin.View.IPESizableWindowConnector">
            <summary>
            Window表示基底インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPESizableWindowConnector.Size">
            <summary>ウィンドウサイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPESizableWindowConnector.WindowState">
            <summary>ウィンドウの表示状態 get/set</summary>
        </member>
        <member name="T:PEPlugin.View.IPXBodyJointVisibleChange">
            <summary>剛体／Joint 表示インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.View.IPXBodyJointVisibleChange.GetBodyVisibles">
            <summary>剛体の表示状態取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPXBodyJointVisibleChange.SetBodyVisibles(System.Boolean[])">
            <summary>剛体の表示状態設定</summary>
        </member>
        <member name="M:PEPlugin.View.IPXBodyJointVisibleChange.GetJointVisibles">
            <summary>Jointの表示状態取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPXBodyJointVisibleChange.SetJointVisibles(System.Boolean[])">
            <summary>Jointの表示状態設定</summary>
        </member>
        <member name="T:PEPlugin.View.IPXPmxViewConnector">
            <summary>PmxView操作インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.View.IPXPmxViewConnector.GetViewMatrix(System.Int32)">
            <summary>
            View行列取得
            </summary>
            <param name="screen">対象画面 | 0:左上 1:右上 2:左下 3:右下</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.View.IPXPmxViewConnector.GetProjectionMatrix(System.Int32)">
            <summary>
            Projection行列取得
            </summary>
            <param name="screen">対象画面 | 0:左上 1:右上 2:左下 3:右下</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.View.IPEPMDViewConnector">
            <summary>
            PMDView操作インターフェイス(レガシー対応)
            </summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateView">
            <summary>描画更新</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel">
            <summary>モデルの更新</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Vertex">
            <summary>モデルの更新 頂点のみ</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Bone">
            <summary>モデルの更新 ボーンのみ</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Weight">
            <summary>モデルの更新 ウェイトのみ</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Body">
            <summary>モデルの更新 剛体のみ</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Joint">
            <summary>モデルの更新 Jointのみ</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModel_Material(System.Int32)">
            <summary>モデルの更新 特定材質のみ</summary>
            <param name="index">材質Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModelSize(System.Single)">
            <summary>モデルサイズの更新</summary>
            <param name="scale">スケール倍率</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.UpdateModelSize(System.Single,System.Boolean)">
            <summary>モデルサイズの更新</summary>
            <param name="scale">スケール倍率</param>
            <param name="edge">エッジ倍率適用</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetVertexIndices">
            <summary>表示対象頂点の取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetVertexIndices(System.Int32[])">
            <summary>
            表示対象頂点の設定(Index)
            </summary>
            <param name="indices">頂点Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetSelectedVertexIndices">
            <summary>選択対象頂点の取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetSelectedVertexIndices(System.Int32[])">
            <summary>
            選択対象頂点の設定(Index)
            </summary>
            <param name="indices">選択頂点Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetSelectedFaceIndices">
            <summary>選択対象面頂点の取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetSelectedFaceIndices(System.Int32[])">
            <summary>
            選択対象面頂点の設定(Index)
            </summary>
            <param name="indices">選択面Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetSelectedBoneIndices">
            <summary>選択対象ボーンの取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetSelectedBoneIndices(System.Int32[])">
            <summary>
            選択対象ボーンの設定(Index)
            </summary>
            <param name="indices">選択ボーンIndex</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetSelectedBodyIndices">
            <summary>選択対象剛体の取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetSelectedBodyIndices(System.Int32[])">
            <summary>
            選択対象剛体の設定(Index)
            </summary>
            <param name="indices">選択剛体Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetSelectedJointIndices">
            <summary>選択対象Jointの取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetSelectedJointIndices(System.Int32[])">
            <summary>
            選択対象Jointの設定(Index)
            </summary>
            <param name="indices">選択JointIndex</param>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.BodyVisible">
            <summary>個別剛体の表示状態</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.SelectedBodyIndex">
            <summary>選択対象剛体(Index) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.SelectedJointIndex">
            <summary>選択対象Joint(Index) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.CameraRotateCenter">
            <summary>視点(回転中心) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.CameraTarget">
            <summary>視点対象 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.CameraPosition">
            <summary>視点位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.CameraUpVector">
            <summary>視点(上方向) get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetCameraView(PEPlugin.Pmd.IPEVector3,PEPlugin.Pmd.IPEVector3,PEPlugin.Pmd.IPEVector3)">
            <summary>
            カメラの一括設定
            </summary>
            <param name="target">視点対象</param>
            <param name="position">視点位置</param>
            <param name="upVector">視点(上方向)</param>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.IsShaderMode">
            <summary>true プログラマブルシェーダ使用環境</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.GetViewAxis">
            <summary>View仮想軸の取得</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.EnableHandleEdit">
            <summary>ハンドル編集の有効状態</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.IsVmdViewBootup">
            <summary>VMDViewの起動状態</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.BootupVmdView">
            <summary>VMDViewで確認(現在の編集対象PMD)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.BootupVmdView(PEPlugin.Pmd.IPEPmd,PEPlugin.Vmd.IPEVmd)">
            <summary>
            VMDViewで確認(起動中はPMD/VMD更新)
            </summary>
            <param name="pmd">PMD(null:更新しない)</param>
            <param name="vmd">VMD(null:更新しない)</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.BootupVmdView(PEPlugin.Pmx.IPXPmx,PEPlugin.Vmd.IPEVmd)">
            <summary>
            VMDViewで確認(起動中はPMX/VMD更新)
            </summary>
            <param name="pmx">PMX(null:更新しない)</param>
            <param name="vmd">VMD(null:更新しない)</param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.PlayVmdView">
            <summary>VMDViewの再生開始</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.StopVmdView">
            <summary>VMDViewの再生停止</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.ShowBoneVmdView">
            <summary>VMDViewのボーン表示状態</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPMDViewConnector.EnableCameraVmdView">
            <summary>VMDViewのカメラ／照明有効状態</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetVmeEvent(PEPlugin.Vme.IPEVme,System.Int32,System.Int32)">
            <summary>
            VMDViewへVMEイベントの設定
            </summary>
            <param name="vme"></param>
            <param name="begin"></param>
            <param name="end"></param>
        </member>
        <member name="M:PEPlugin.View.IPEPMDViewConnector.SetVmeEvent(PEPlugin.Vme.IPEVmeResult,System.Int32,System.Int32)">
            <summary>
            VMDViewへVME結果の設定
            </summary>
            <param name="result"></param>
            <param name="begin"></param>
            <param name="end"></param>
        </member>
        <member name="T:PEPlugin.View.VertexEditObject">
            <summary>
            頂点／ボーン編集View操作対象
            </summary>
        </member>
        <member name="F:PEPlugin.View.VertexEditObject.Vertex">
            <summary>頂点編集</summary>
        </member>
        <member name="F:PEPlugin.View.VertexEditObject.Bone">
            <summary>ボーン編集</summary>
        </member>
        <member name="T:PEPlugin.View.IPEVertexEditConnector">
            <summary>
            頂点／ボーン編集View操作インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.EditObject">
            <summary>編集対象(設定不可) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.MoveOffset">
            <summary>移動単位量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.RotateOffset">
            <summary>回転単位量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.ScaleOffset">
            <summary>スケール単位量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.RotateNormalOffset">
            <summary>法線回転単位量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.NormalAxisMoveOffset">
            <summary>法線軸移動単位量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.ControlYDirection">
            <summary>Y軸縦方向操作(Y軸縦チェック) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.NormalControlXDirection">
            <summary>法線でのX軸縦方向操作(X軸縦チェック) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.CenterOrigin">
            <summary>重心座標中心 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.MirrorMode">
            <summary>鏡像編集モード get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.MoveValue">
            <summary>値指定 移動量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.RotateValue">
            <summary>値指定 回転量(deg) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.ScaleValue">
            <summary>値指定 スケール量 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.CenterValue">
            <summary>値指定 中心座標 get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Move">
            <summary>移動</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Move(PEPlugin.Pmd.IPEVector3)">
            <summary>
            移動
            </summary>
            <param name="val">移動量</param>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Rotate">
            <summary>回転</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Rotate(PEPlugin.Pmd.IPEVector3)">
            <summary>
            回転
            </summary>
            <param name="rot">回転量(deg)</param>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Scaling">
            <summary>スケーリング</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.Scaling(PEPlugin.Pmd.IPEVector3)">
            <summary>
            スケーリング
            </summary>
            <param name="val">スケーリング量</param>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.RotateNormalValue">
            <summary>値指定 法線回転量(deg) get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.RotateNormal">
            <summary>法線回転</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.RotateNormal(PEPlugin.Pmd.IPEVector3)">
            <summary>
            法線回転
            </summary>
            <param name="rot">回転量(deg)</param>
        </member>
        <member name="P:PEPlugin.View.IPEVertexEditConnector.MoveNormalAxisValue">
            <summary>値指定 法線軸移動量 get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.MoveNormalAxis">
            <summary>法線軸移動(押出)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.MoveNormalAxis(System.Single)">
            <summary>
            法線軸移動(押出)
            </summary>
            <param name="val">移動量</param>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.GetVertexMemory(System.Int32)">
            <summary>
            内部メモリ内の頂点Indexを取得
            </summary>
            <param name="num">記憶域[0-4]</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.View.IPEVertexEditConnector.SetVertexMemory(System.Int32,System.Int32[])">
            <summary>
            頂点Indexを内部メモリに記憶
            </summary>
            <param name="num">記憶域[0-4]</param>
            <param name="indices">頂点Index | null指定で無効化</param>
        </member>
        <member name="T:PEPlugin.View.PartsSelectObject">
            <summary>
            頂点表示／材質編集表示対象
            </summary>
        </member>
        <member name="F:PEPlugin.View.PartsSelectObject.All">
            <summary>全表示</summary>
        </member>
        <member name="F:PEPlugin.View.PartsSelectObject.Range">
            <summary>範囲</summary>
        </member>
        <member name="F:PEPlugin.View.PartsSelectObject.Material">
            <summary>材質</summary>
        </member>
        <member name="F:PEPlugin.View.PartsSelectObject.Bone">
            <summary>ボーン</summary>
        </member>
        <member name="F:PEPlugin.View.PartsSelectObject.Expression">
            <summary>表情</summary>
        </member>
        <member name="T:PEPlugin.View.IPEPartsSelectConnector">
            <summary>
            頂点表示／材質編集操作インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.SelectObject">
            <summary>表示対象 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.RangeBegin">
            <summary>範囲開始 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.RangeEnd">
            <summary>範囲終了 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.MaterialItemsCount">
            <summary>材質リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.BoneItemsCount">
            <summary>ボーンリストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.ExpressionItemsCount">
            <summary>表情リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.SelectedMaterialIndex">
            <summary>材質リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.SelectedBoneIndex">
            <summary>ボーンリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.SelectedExpressionIndex">
            <summary>表情リストの選択Index get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.GetCheckedMaterialIndices">
            <summary>材質リストのチェック要素取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.SetCheckedMaterialIndices(System.Int32[])">
            <summary>
            材質リストのチェック要素設定
            </summary>
            <param name="indices">選択材質Index</param>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.GetCheckedBoneIndices">
            <summary>ボーンリストのチェック要素取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.SetCheckedBoneIndices(System.Int32[])">
            <summary>
            ボーンリストのチェック要素設定
            </summary>
            <param name="indices">選択ボーンIndex</param>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.GetCheckedExpressionIndices">
            <summary>表情リストのチェック要素取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPEPartsSelectConnector.SetCheckedExpressionIndices(System.Int32[])">
            <summary>
            表情リストのチェック要素設定
            </summary>
            <param name="indices">選択表情Index</param>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.SelectedPartsVisible">
            <summary>材質選択での個別パーツ表示ON／OFF get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEPartsSelectConnector.BoneSelected">
            <summary>ボーン選択での同時ボーン選択 get/set</summary>
        </member>
        <member name="T:PEPlugin.View.AntiAliasingType">
            <summary>
            アンチエイリアスタイプ
            </summary>
        </member>
        <member name="F:PEPlugin.View.AntiAliasingType.None">
            <summary>アンチエイリアス無効</summary>
        </member>
        <member name="F:PEPlugin.View.AntiAliasingType.x2">
            <summary>アンチエイリアスx2</summary>
        </member>
        <member name="F:PEPlugin.View.AntiAliasingType.x4">
            <summary>アンチエイリアスx4</summary>
        </member>
        <member name="F:PEPlugin.View.AntiAliasingType.x8">
            <summary>アンチエイリアスx8</summary>
        </member>
        <member name="F:PEPlugin.View.AntiAliasingType.x16">
            <summary>アンチエイリアスx16</summary>
        </member>
        <member name="T:PEPlugin.View.FillMode">
            <summary>
            塗りつぶし形式
            </summary>
        </member>
        <member name="F:PEPlugin.View.FillMode.Solid">
            <summary>通常描画</summary>
        </member>
        <member name="F:PEPlugin.View.FillMode.Flat">
            <summary>フラット面</summary>
        </member>
        <member name="F:PEPlugin.View.FillMode.WireFrame">
            <summary>ワイヤーフレーム</summary>
        </member>
        <member name="F:PEPlugin.View.FillMode.WirePlus">
            <summary>ワイヤー+</summary>
        </member>
        <member name="F:PEPlugin.View.FillMode.Wire2">
            <summary>ワイヤー2</summary>
        </member>
        <member name="T:PEPlugin.View.ToonType">
            <summary>
            Toon形式
            </summary>
        </member>
        <member name="F:PEPlugin.View.ToonType.None">
            <summary>Toonなし</summary>
        </member>
        <member name="F:PEPlugin.View.ToonType.Type1">
            <summary>Type1</summary>
        </member>
        <member name="F:PEPlugin.View.ToonType.Type2">
            <summary>Type2</summary>
        </member>
        <member name="T:PEPlugin.View.IPEViewSettingConnector">
            <summary>
            表示設定View操作インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.SelectedTabPage">
            <summary>選択表示中のタブIndex get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.BackColor">
            <summary>背景色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.AmbientColor">
            <summary>環境色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.LightColor">
            <summary>照明色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.LightDirection">
            <summary>照明方向 get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEViewSettingConnector.InitializeLight">
            <summary>照明初期化</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_Bone">
            <summary>追加表示-ボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_Vertex">
            <summary>追加表示-頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_SelectedVertex">
            <summary>追加表示-選択頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_UnvisibleVertex">
            <summary>追加表示-非表示頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_SelectedFace">
            <summary>追加表示-選択面 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_Normal">
            <summary>追加表示-法線 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_SelectedNormal">
            <summary>追加表示-選択法線 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_Body">
            <summary>追加表示-剛体 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_SolidBody">
            <summary>追加表示-剛体 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_Joint">
            <summary>追加表示-Joint get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Visible_WeightMap">
            <summary>追加表示-ウェイトMAP表示 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.OnlyWeighting">
            <summary>ウェイトMAP表示-影響頂点のみ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.NonWeightingVertexColor">
            <summary>比ウェイト頂点色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.ModelSize">
            <summary>モデルの表示サイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Perspective">
            <summary>パース get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.AAType">
            <summary>アンチエイリアス(環境によっては機能しません) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.ColorBlending">
            <summary>調色形式 true:MMD風 false:DirectX形式 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.FillMode">
            <summary>塗りつぶし形式 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.VertexPointSize">
            <summary>頂点ポイント表示サイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.VertexPointColor">
            <summary>頂点ポイント表示色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.SelectedVertexPointColor">
            <summary>選択頂点ポイント表示色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.NormalLength">
            <summary>法線表示サイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.NormalColor">
            <summary>法線表示色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.SelectedNormalColor">
            <summary>選択法線表示色 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.JointPointSize">
            <summary>Joint表示サイズ get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.ToonType">
            <summary>Toon形式(環境によっては機能しません) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.Edge">
            <summary>エッジの表示／非表示(環境によっては機能しません) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEViewSettingConnector.EdgeSize">
            <summary>エッジサイズ(環境によっては機能しません) get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEViewSettingConnector.InitializeViewSetting">
            <summary>表示設定の初期化</summary>
        </member>
        <member name="M:PEPlugin.View.IPEViewSettingConnector.LoadViewSetting(System.String)">
            <summary>
            表示設定の読み込み
            </summary>
            <param name="path">設定ファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.View.IPEViewSettingConnector.SaveViewSetting(System.String)">
            <summary>
            表示設定の保存
            </summary>
            <param name="path">設定ファイルパス(*.xml)</param>
        </member>
        <member name="T:PEPlugin.View.IPESubViewConnector">
            <summary>
            サブView操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.View.IPESubViewConnector.UpdateView">
            <summary>描画更新</summary>
        </member>
        <member name="T:PEPlugin.View.IPEVertexGuideConnector">
            <summary>
            選択頂点ガイド操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexGuideConnector.GetSelectedCurrentVertex">
            <summary>現在の選択頂点の取得</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexGuideConnector.SelectVertex">
            <summary>ガイド内の頂点を選択状態にする</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexGuideConnector.GetVertexIndices">
            <summary>対象頂点の取得(Index)</summary>
        </member>
        <member name="M:PEPlugin.View.IPEVertexGuideConnector.SetVertexIndices(System.Int32[])">
            <summary>
            対象頂点の設定(Index)
            </summary>
            <param name="indices">選択頂点Index</param>
        </member>
        <member name="T:PEPlugin.View.IPEWeightEditConnector">
            <summary>
            ウェイト描画操作インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.Drawing">
            <summary>ウェイト描画状態 get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEWeightEditConnector.BeginDraw">
            <summary>ウェイト描画開始</summary>
        </member>
        <member name="M:PEPlugin.View.IPEWeightEditConnector.EndDraw">
            <summary>ウェイト描画終了</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.DrawSize">
            <summary>描画サイズ(半径のポイントサイズ) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.IsGradation">
            <summary>true:グラデーション false:ベタ塗り get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.WeightValue">
            <summary>描画ウェイト値 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.Spray">
            <summary>スプレーモード get/set</summary>
        </member>
        <member name="M:PEPlugin.View.IPEWeightEditConnector.SprayOn">
            <summary>スプレーON</summary>
        </member>
        <member name="M:PEPlugin.View.IPEWeightEditConnector.SprayOff">
            <summary>スプレーOFF</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.SprayPower">
            <summary>スプレー強度(1～30) get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.SprayInterval">
            <summary>スプレー間隔 get/set</summary>
        </member>
        <member name="P:PEPlugin.View.IPEWeightEditConnector.SprayOffset">
            <summary>スプレーモード true:加算 false:減算 get/set</summary>
        </member>
        <member name="T:PEPlugin.View.IPETransformViewConnector">
            <summary>
            TransformView操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.View.IPETransformViewConnector.UpdateView">
            <summary>描画更新</summary>
        </member>
        <member name="T:PEPlugin.View.IPEObjectSelectConnector">
            <summary>選択オブジェクト管理操作インターフェイス</summary>
        </member>
        <member name="T:PEPlugin.View.IPEExtensionEditConnector">
            <summary>拡張編集操作インターフェイス</summary>
        </member>
        <member name="T:PEPlugin.IPEBuilder">
            <summary>
            ビルダインターフェース
            </summary>
        </member>
        <member name="P:PEPlugin.IPEBuilder.SC">
            <summary>短絡系ビルダインターフェース</summary>
        </member>
        <member name="P:PEPlugin.IPEBuilder.Pmx">
            <summary>PMX系ビルダインターフェース</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector4">
            <summary>IPEVector4インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector4(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            IPEVector4インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector3">
            <summary>IPEVector3インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector3(System.Single,System.Single,System.Single)">
            <summary>
            IPEVector3インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector2">
            <summary>IPEVector2インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVector2(System.Single,System.Single)">
            <summary>
            IPEVector2インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreatePmd">
            <summary>IPEPmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreatePmd(System.String)">
            <summary>
            IPEPmdインスタンス生成
            </summary>
            <param name="path">ファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateHeader">
            <summary>IPEHeaderインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVertex">
            <summary>IPEVertexインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateMaterial">
            <summary>IPEMaterialインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateBone">
            <summary>IPEBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateIK">
            <summary>IPEIKインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateExpression">
            <summary>IPEExpressionインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateExpressionOffset">
            <summary>IPEExpressionOffsetインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateFrameBone">
            <summary>IPEFrameBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateBody">
            <summary>IPEBodyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateJoint">
            <summary>IPEJointインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXPmd">
            <summary>IPEXPmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXPmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEXPmdインスタンス生成
            </summary>
            <param name="pmd">IPEPmdオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXVertex">
            <summary>IPEXVertexインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXFace">
            <summary>IPEXFaceインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXMaterial">
            <summary>IPEXMaterialインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXBone">
            <summary>IPEXBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXIK">
            <summary>IPEXIKインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXExpression">
            <summary>IPEXExpressionインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXExpressionOffset">
            <summary>IPEXExpressionOffsetインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXFrameBone">
            <summary>IPEXFrameBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXBody">
            <summary>IPEXBodyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateXJoint">
            <summary>IPEXJointインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmd">
            <summary>IPEVmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmd(System.String[],System.String[])">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="boneNames"></param>
            <param name="morphNames"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmd(PEPlugin.Pmd.IPEPmd,System.String)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <param name="vmdPath">初期化用VMDファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdIPL">
            <summary>IPEVmdIPLインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdBoneKey">
            <summary>IPEVmdBoneKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdMorphKey">
            <summary>IPEVmdMorphKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdBasCameraKey">
            <summary>IPEVmdCameraKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdLightKey">
            <summary>IPEVmdLightKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdSelfShadowKey">
            <summary>IPEVmdSelfShadowKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdBonePoseState">
            <summary>IPEVmdBonePoseStateインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdBonePoseState(PEPlugin.Vmd.IPEVmd,System.Int32)">
            <summary>
            IPEVmdBonePoseStateインスタンス生成
            </summary>
            <param name="vmd">Vmd</param>
            <param name="boneIndex">対象ボーンIndex</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmdBonePoseState(PEPlugin.Vmd.IPEVmd,System.Int32[])">
            <summary>
            IPEVmdBonePoseStateインスタンスの一括生成
            </summary>
            <param name="vmd">Vmd</param>
            <param name="boneIndices">対象ボーンIndex列</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVme">
            <summary>IPEVmeインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVme(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEVmeインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmeGroup">
            <summary>
            IPEVmeGroupインスタンス生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEBuilder.CreateVmePath">
            <summary>
            IPEVmePathインスタンス(空間パス)の作成
            </summary>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.IPEShortBuilder">
            <summary>
            短絡系ビルダインターフェース
            </summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V4">
            <summary>IPEVector4インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V4(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            IPEVector4インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V3">
            <summary>IPEVector3インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V3(System.Single,System.Single,System.Single)">
            <summary>
            IPEVector3インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V2">
            <summary>IPEVector2インスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.V2(System.Single,System.Single)">
            <summary>
            IPEVector2インスタンス生成
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Pmd">
            <summary>IPEPmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Pmd(System.String)">
            <summary>
            IPEPmdインスタンス生成
            </summary>
            <param name="path">ファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Header">
            <summary>IPEHeaderインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vertex">
            <summary>IPEVertexインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Material">
            <summary>IPEMaterialインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Bone">
            <summary>IPEBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.IK">
            <summary>IPEIKインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Expression">
            <summary>IPEExpressionインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.ExpressionOffset">
            <summary>IPEExpressionOffsetインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.FrameBone">
            <summary>IPEFrameBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Body">
            <summary>IPEBodyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Joint">
            <summary>IPEJointインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XPmd">
            <summary>IPEXPmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XPmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEXPmdインスタンス生成
            </summary>
            <param name="pmd">IPEPmdオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XVertex">
            <summary>IPEXVertexインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XFace">
            <summary>IPEXFaceインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XMaterial">
            <summary>IPEXMaterialインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XBone">
            <summary>IPEXBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XIK">
            <summary>IPEXIKインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XExpression">
            <summary>IPEXExpressionインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XExpressionOffset">
            <summary>IPEXExpressionOffsetインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XFrameBone">
            <summary>IPEXFrameBoneインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XBody">
            <summary>IPEXBodyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.XJoint">
            <summary>IPEXJointインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd">
            <summary>IPEVmdインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd(PEPlugin.Pmx.IPXPmx)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmx">初期化用PMX</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd(System.String[],System.String[])">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="boneNames">ボーン名</param>
            <param name="morphNames">モーフ名</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd(PEPlugin.Pmd.IPEPmd,System.String)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <param name="vmdPath">初期化用VMDファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vmd(PEPlugin.Pmx.IPXPmx,System.String)">
            <summary>
            IPEVmdインスタンス生成
            </summary>
            <param name="pmx">初期化用PMX</param>
            <param name="vmdPath">初期化用VMDファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdIPL">
            <summary>IPEVmdIPLインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdBoneKey">
            <summary>IPEVmdBoneKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdMorphKey">
            <summary>IPEVmdMorphKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdCameraKey">
            <summary>IPEVmdCameraKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdLightKey">
            <summary>IPEVmdLightKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdSelfShadowKey">
            <summary>IPEVmdSelfShadowKeyインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdBoneKey(System.Int32,System.Int32,PEPlugin.SDX.V3,PEPlugin.SDX.Q)">
            <summary>
            IPEVmdBoneKey作成
            </summary>
            <param name="frame">フレーム</param>
            <param name="bone">ボーンIndex</param>
            <param name="trans">移動量</param>
            <param name="rot">回転量</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdMorphKey(System.Int32,System.Int32,System.Single)">
            <summary>
            IPEVmdMorphKey作成
            </summary>
            <param name="frame">フレーム</param>
            <param name="morph">モーフIndex</param>
            <param name="v">モーフ値</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdBonePoseState">
            <summary>IPEVmdBonePoseStateインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdBonePoseState(PEPlugin.Vmd.IPEVmd,System.Int32)">
            <summary>
            IPEVmdBonePoseStateインスタンス生成
            </summary>
            <param name="vmd">Vmd</param>
            <param name="boneIndex">対象ボーンIndex</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmdBonePoseState(PEPlugin.Vmd.IPEVmd,System.Int32[])">
            <summary>
            IPEVmdBonePoseStateインスタンスの一括生成
            </summary>
            <param name="vmd">Vmd</param>
            <param name="boneIndices">対象ボーンIndex列</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vme">
            <summary>IPEVmeインスタンス生成</summary>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.Vme(PEPlugin.Pmd.IPEPmd)">
            <summary>
            IPEVmeインスタンス生成
            </summary>
            <param name="pmd">初期化用PMD</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmeGroup">
            <summary>
            IPEVmeGroupインスタンス生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPEShortBuilder.VmePath">
            <summary>
            IPEVmePathインスタンス(空間パス)の作成
            </summary>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.IPXPmxBuilder">
            <summary>PMX系ビルダインターフェース</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Pmx">
            <summary>IPXPmxインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Vertex">
            <summary>IPXVertexインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Face">
            <summary>IPXFaceインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Material">
            <summary>IPXMaterialインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Bone">
            <summary>IPXBoneインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.IKLink">
            <summary>IPXIKLinkインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.IKLink(PEPlugin.Pmx.IPXBone)">
            <summary>
            IPXIKLinkインスタンス取得
            </summary>
            <param name="bone">対象リンクボーン</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.IKLink(PEPlugin.Pmx.IPXBone,PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            IPXIKLinkインスタンス取得 - 制限角有効
            </summary>
            <param name="bone">対象リンクボーン</param>
            <param name="low">制限角低</param>
            <param name="high">制限角高</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Morph">
            <summary>IPXMorphインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.VertexMorphOffset">
            <summary>IPXVertexMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.VertexMorphOffset(PEPlugin.Pmx.IPXVertex,PEPlugin.SDX.V3)">
            <summary>
            IPXVertexMorphOffsetインスタンス取得
            </summary>
            <param name="vertex">対象頂点</param>
            <param name="offset">オフセット</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.UVMorphOffset">
            <summary>IPXUVMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.UVMorphOffset(PEPlugin.Pmx.IPXVertex,PEPlugin.SDX.V4)">
            <summary>
            IPXUVMorphOffsetインスタンス取得
            </summary>
            <param name="vertex">対象頂点</param>
            <param name="offset">オフセット</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.BoneMorphOffset">
            <summary>IPXBoneMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.BoneMorphOffset(PEPlugin.Pmx.IPXBone,PEPlugin.SDX.V3,PEPlugin.SDX.Q)">
            <summary>
            IPXBoneMorphOffsetインスタンス取得
            </summary>
            <param name="bone">対象ボーン</param>
            <param name="translation">移動オフセット</param>
            <param name="rotation">回転オフセット</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.MaterialMorphOffset">
            <summary>IPXMaterialMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.GroupMorphOffset">
            <summary>IPXGroupMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.GroupMorphOffset(PEPlugin.Pmx.IPXMorph,System.Single)">
            <summary>
            IPXGroupMorphOffsetインスタンス取得
            </summary>
            <param name="morph">対象モーフ</param>
            <param name="ratio">モーフ倍率</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.ImpulseMorphOffset">
            <summary>IPXImpulseMorphOffsetインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.ImpulseMorphOffset(PEPlugin.Pmx.IPXBody,System.Boolean,PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            IPXImpulseMorphOffsetインスタンス取得
            </summary>
            <param name="body">対象剛体</param>
            <param name="local">ローカル設定</param>
            <param name="velocity">速度オフセット</param>
            <param name="torque">トルクオフセット</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Node">
            <summary>IPXNodeインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.BoneNodeItem">
            <summary>IPXBoneNodeItemインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.BoneNodeItem(PEPlugin.Pmx.IPXBone)">
            <summary>
            IPXBoneNodeItemインスタンス取得
            </summary>
            <param name="bone">ボーン参照</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.MorphNodeItem">
            <summary>IPXMorphNodeItemインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.MorphNodeItem(PEPlugin.Pmx.IPXMorph)">
            <summary>
            IPXMorphNodeItemインスタンス取得
            </summary>
            <param name="morph">モーフ参照</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Body">
            <summary>IPXBodyインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.Joint">
            <summary>IPXJointインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.SoftBody">
            <summary>IPXSoftBodyインスタンス取得</summary>
        </member>
        <member name="M:PEPlugin.IPXPmxBuilder.SoftBodyAnchor">
            <summary>IPXSoftBody剛体アンカーインスタンス取得</summary>
        </member>
        <member name="T:PEPlugin.PEStaticBuilder">
            <summary>汎用ビルダクラス - host以下のbuilder変数への短絡</summary>
        </member>
        <member name="P:PEPlugin.PEStaticBuilder.Builder">
            <summary>汎用ビルダ set禁止</summary>
        </member>
        <member name="P:PEPlugin.PEStaticBuilder.ShortBuilder">
            <summary>汎用短絡ビルダ set禁止</summary>
        </member>
        <member name="P:PEPlugin.PEStaticBuilder.SC">
            <summary>汎用短絡ビルダ(短絡名)</summary>
        </member>
        <member name="P:PEPlugin.PEStaticBuilder.Pmx">
            <summary>PMXビルダ set禁止</summary>
        </member>
        <member name="T:PEPlugin.Form.IPEFormConnector">
            <summary>
            PmxForm操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.Close">
            <summary>アプリケーションの終了</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.InitializePMD">
            <summary>PMDモデルの初期化(PMD互換)</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.OpenPMDFile(System.String)">
            <summary>
            PMDモデルのオープン
            </summary>
            <param name="path">PMDファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.ImportXFile(System.String)">
            <summary>
            Xモデルのインポート
            </summary>
            <param name="path">Xファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.AppendPMDFile(System.String)">
            <summary>
            PMDモデルの追加インポート
            </summary>
            <param name="path">追加PMDファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.AppendXFile(System.String)">
            <summary>
            Xモデルの追加インポート
            </summary>
            <param name="path">追加Xファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.SavePMDFile(System.String)">
            <summary>
            PMDファイルへ保存
            </summary>
            <param name="path">PMDファイルパス(*.pmd)</param>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.SaveMaterialName(System.String)">
            <summary>
            材質名の保存(PMD互換)
            </summary>
            <param name="path">保存材質名ファイルパス(*.txt)</param>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.InitializePMX">
            <summary>PMXモデルの初期化</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.OpenPMXFile(System.String)">
            <summary>
            PMXモデルのオープン
            </summary>
            <param name="path">PMXファイルパス</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.SavePMXFile(System.String)">
            <summary>
            PMXファイルへ保存
            </summary>
            <param name="path">PMXファイルパス(*.pmx)</param>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.UpdateList(PEPlugin.Pmd.UpdateObject)">
            <summary>
            指定リストの表示更新
            </summary>
            <param name="page">対象リストのページ(リストのないページは未対応)</param>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.VertexItemsCount">
            <summary>頂点リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.FaceItemsCount">
            <summary>面頂点リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.MaterialItemsCount">
            <summary>材質リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.BoneItemsCount">
            <summary>ボーンリストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.IKItemsCount">
            <summary>IKリストの要素数取得(PMD互換) get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.IKLinkItemsCount">
            <summary>IK影響下リストの要素数取得(PMD互換:PMD-IKLink) get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.ExpressionItemsCount">
            <summary>表情リストの要素数取得(PMD互換) get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.ExpressionOffsetItemsCount">
            <summary>表情オフセットリストの要素数取得(PMD互換) get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.FrameExpressionItemsCount">
            <summary>表情枠リストの要素数取得(PMD互換:PMX表示枠-"表情"対象) get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.FrameBoneItemsCount">
            <summary>表示枠リストの要素数取得(PMD互換 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.FrameBone_BoneItemsCount">
            <summary>表示枠(対象ボーン)リストの要素数取得(PMD互換 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.BodyItemsCount">
            <summary>剛体リストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.JointItemsCount">
            <summary>Jointリストの要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.MorphItemsCount">
            <summary>PMXモーフ要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.NodeItemsCount">
            <summary>PMX表示枠要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.NodeElementItemsCount">
            <summary>PMX表示枠内要素数取得 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedTabPage">
            <summary>選択表示中のタブIndex get/set </summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedVertexIndex">
            <summary>頂点リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedFaceIndex">
            <summary>面頂点リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedMaterialIndex">
            <summary>材質リストの選択Index get/set</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.GetSelectedMaterialIndices">
            <summary>材質リストの選択Index(複数指定)取得</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.SetSelectedMaterialIndices(System.Int32[])">
            <summary>
            材質リストの選択Index(複数指定)設定 ※内部仕様により使用不可推奨
            </summary>
            <param name="indices">選択材質Index</param>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedBoneIndex">
            <summary>ボーンリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedIKIndex">
            <summary>IKリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedIKLinkIndex">
            <summary>IKリンクリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedExpressionIndex">
            <summary>表情リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedExpressionOffsetIndex">
            <summary>表情オフセットリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedFrameExpressionIndex">
            <summary>表情枠リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedFrameBoneIndex">
            <summary>表示枠リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedFrameBone_BoneIndex">
            <summary>表示枠ボーンリストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedBodyIndex">
            <summary>剛体リストの選択Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.SelectedJointIndex">
            <summary>Jointリストの選択Index get/set</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.Undo">
            <summary>Undo処理</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.UndoCount">
            <summary>Undo可能回数 get</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.Redo">
            <summary>Redo処理</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.RedoCount">
            <summary>Redo可能回数 get</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.Location">
            <summary>フォーム表示位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.TopMost">
            <summary>最前面表示 get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.EnableFacePage">
            <summary>面頂点タブの編集有効状態 get/set</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.GetBoneKindColors">
            <summary>ボーン種類のリスト表示色取得</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.GetExpressionCategoryColors">
            <summary>表情種類のリスト表示色取得</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.GetBodyModeColors">
            <summary>剛体モードのリスト表示色取得</summary>
        </member>
        <member name="M:PEPlugin.Form.IPEFormConnector.GetBodyGroupColors">
            <summary>剛体グループのリスト表示色取得</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.EnableTexUpdateWatch">
            <summary>外部テクスチャの更新監視状態 get/set</summary>
        </member>
        <member name="P:PEPlugin.Form.IPEFormConnector.PmxFormActivate">
            <summary>Pmx編集の有効状態(PMX-PMD編集切り替え) get/set</summary>
        </member>
        <member name="T:PEPlugin.SDX.V4">
            <summary>Vector4 | PEPlugin - SlimDX中継用</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.ToVector4">
            <summary>Vector4(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.ToColor4">
            <summary>Color4(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.ToColor3">
            <summary>Color3(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.ToV3">
            <summary>V3(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.op_Implicit(PEPlugin.SDX.V4)~SlimDX.Vector4">
            <summary>
            operator - Vector4(SlimDX)へ変換
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V4.op_Implicit(SlimDX.Vector4)~PEPlugin.SDX.V4">
            <summary>
            operator - Vector4(SlimDX)から変換
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V4.op_Implicit(PEPlugin.SDX.V4)~SlimDX.Color4">
            <summary>
            operator - Color4(SlimDX)へ変換
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V4.op_Implicit(SlimDX.Color4)~PEPlugin.SDX.V4">
            <summary>
            operator - Color4(SlimDX)から変換
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V4.Normalize">
            <summary>正規化</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.Length">
            <summary>ベクトル長</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.LengthSq">
            <summary>ベクトル長^2</summary>
        </member>
        <member name="M:PEPlugin.SDX.V4.Max(PEPlugin.SDX.V4,PEPlugin.SDX.V4)">
            <summary>
            X/Y/Z/Wを大側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V4.Min(PEPlugin.SDX.V4,PEPlugin.SDX.V4)">
            <summary>
            X/Y/Z/Wを小側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.SDX.V4.X">
            <summary>X(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.Y">
            <summary>Y(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.Z">
            <summary>Z(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.W">
            <summary>W(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.R">
            <summary>R(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.G">
            <summary>G(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.B">
            <summary>B(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V4.A">
            <summary>A(PEPlugin)</summary>
        </member>
        <member name="T:PEPlugin.SDX.V3">
            <summary>Vector3 | PEPlugin - SlimDX中継用</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.ToVector3">
            <summary>Vector3(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.ToV4">
            <summary>V4(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.ToColor3">
            <summary>Color3(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(System.Random,System.Single,System.Single)">
            <summary>
            乱数ベクトル取得
            </summary>
            <param name="rand">任意のrand()クラス</param>
            <param name="min">最小値</param>
            <param name="max">最大値</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(System.Random,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            乱数ベクトル取得
            </summary>
            <param name="rand">任意のrand()クラス</param>
            <param name="min">最小値 XYZ</param>
            <param name="max">最大値 XYZ</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(System.Func{System.Single},System.Single,System.Single)">
            <summary>
            乱数ベクトル取得(任意の乱数取得関数使用)
            </summary>
            <param name="next">0.0f～1.0fの乱数を返す関数</param>
            <param name="min">最小値</param>
            <param name="max">最大値</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(System.Func{System.Single},SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            乱数ベクトル取得(任意の乱数取得関数使用)
            </summary>
            <param name="next">0.0f～1.0fの乱数を返す関数</param>
            <param name="min">最小値 XYZ</param>
            <param name="max">最大値 XYZ</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(System.Single,System.Single)">
            <summary>
            乱数ベクトル取得(内部定義乱数を使用)
            </summary>
            <param name="min">最小値</param>
            <param name="max">最大値</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Rand(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            乱数ベクトル取得(内部定義乱数を使用)
            </summary>
            <param name="min">最小値 XYZ</param>
            <param name="max">最大値 XYZ</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.SetRandSeed(System.Int32)">
            <summary>
            内部定義乱数の乱数SEED設定
            </summary>
            <param name="seed">seed値</param>
        </member>
        <member name="M:PEPlugin.SDX.V3.op_Implicit(PEPlugin.SDX.V3)~SlimDX.Vector3">
            <summary>
            operator - Vector3(SlimDX)へ変換
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.op_Implicit(SlimDX.Vector3)~PEPlugin.SDX.V3">
            <summary>
            operator - Vector3(SlimDX)から変換
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.op_Implicit(PEPlugin.SDX.V3)~SlimDX.Color3">
            <summary>
            operator - Color3(SlimDX)へ変換
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.op_Implicit(SlimDX.Color3)~PEPlugin.SDX.V3">
            <summary>
            operator - Color3(SlimDX)から変換
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Normalize">
            <summary>正規化</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Length">
            <summary>ベクトル長</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.LengthSq">
            <summary>ベクトル長^2</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Max(PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            X/Y/Zを大側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V3.Min(PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            X/Y/Zを小側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.SDX.V3.MaxValue">
            <summary>X/Y/Z - float.MaxValue のベクトル値</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.MinValue">
            <summary>X/Y/Z - float.MinValue のベクトル値</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Mul(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>Vector3 要素積</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Mul(SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>Vector3 要素積</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Mul(SlimDX.Vector3@,SlimDX.Vector3@,SlimDX.Vector3@)">
            <summary>Vector3 要素積</summary>
        </member>
        <member name="M:PEPlugin.SDX.V3.Equals(SlimDX.Vector3@,SlimDX.Vector3@,System.Nullable{System.Single})">
            <summary>
            Vector3 同値判定
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <param name="lim">閾値(1e-5)</param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.SDX.V3.X">
            <summary>X(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.Y">
            <summary>Y(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.Z">
            <summary>Z(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.R">
            <summary>R(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.G">
            <summary>G(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V3.B">
            <summary>B(PEPlugin)</summary>
        </member>
        <member name="T:PEPlugin.SDX.V2">
            <summary>Vector2 | PEPlugin - SlimDX中継用</summary>
        </member>
        <member name="M:PEPlugin.SDX.V2.ToVector2">
            <summary>Vector2(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.V2.op_Implicit(PEPlugin.SDX.V2)~SlimDX.Vector2">
            <summary>
            operator - Vector2(SlimDX)へ変換
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V2.op_Implicit(SlimDX.Vector2)~PEPlugin.SDX.V2">
            <summary>
            operator - Vector2(SlimDX)から変換
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V2.Normalize">
            <summary>正規化</summary>
        </member>
        <member name="M:PEPlugin.SDX.V2.Length">
            <summary>ベクトル長</summary>
        </member>
        <member name="M:PEPlugin.SDX.V2.LengthSq">
            <summary>ベクトル長^2</summary>
        </member>
        <member name="M:PEPlugin.SDX.V2.Max(PEPlugin.SDX.V2,PEPlugin.SDX.V2)">
            <summary>
            X/Yを大側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.V2.Min(PEPlugin.SDX.V2,PEPlugin.SDX.V2)">
            <summary>
            X/Yを小側へ補正
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.SDX.V2.X">
            <summary>X(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V2.Y">
            <summary>Y(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V2.U">
            <summary>U(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.V2.V">
            <summary>V(PEPlugin)</summary>
        </member>
        <member name="T:PEPlugin.SDX.M">
            <summary>Matrix | PEPlugin - SlimDX中継用</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.ToMatrix">
            <summary>Matrix(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.op_Implicit(PEPlugin.SDX.M)~SlimDX.Matrix">
            <summary>
            operator - Matrix(SlimDX)へ変換
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.op_Implicit(SlimDX.Matrix)~PEPlugin.SDX.M">
            <summary>
            operator - Matrix(SlimDX)から変換
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.RotM(SlimDX.Vector3,SlimDX.Vector3,System.Single,SlimDX.Matrix@)">
            <summary>
            任意中心での回転行列の取得
            </summary>
            <param name="origin">回転中心</param>
            <param name="axis">軸</param>
            <param name="angle">回転量(rad)</param>
            <param name="m">出力行列</param>
        </member>
        <member name="M:PEPlugin.SDX.M.RotM(SlimDX.Vector3,SlimDX.Vector3,System.Single)">
            <summary>
            任意中心での回転行列の取得
            </summary>
            <param name="origin">回転中心</param>
            <param name="axis">軸</param>
            <param name="angle">回転量(rad)</param>
        </member>
        <member name="M:PEPlugin.SDX.M.RotM(SlimDX.Vector3,SlimDX.Matrix,SlimDX.Matrix@)">
            <summary>
            任意中心での回転行列の取得
            </summary>
            <param name="origin">回転中心</param>
            <param name="rm">回転行列</param>
            <param name="m">出力行列</param>
        </member>
        <member name="M:PEPlugin.SDX.M.RotM(SlimDX.Vector3,SlimDX.Matrix)">
            <summary>
            任意中心での回転行列の取得
            </summary>
            <param name="origin">回転中心</param>
            <param name="rm">回転行列</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubTrans(SlimDX.Matrix@)">
            <summary>
            移動成分の取り出し
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubTrans(SlimDX.Matrix)">
            <summary>
            移動成分の取り出し
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubTrans">
            <summary>
            移動成分の取り出し
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubScale(SlimDX.Matrix@)">
            <summary>
            倍率成分の取り出し
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubScale(SlimDX.Matrix)">
            <summary>
            倍率成分の取り出し
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubScale">
            <summary>
            倍率成分の取り出し
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotateS(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
            回転(+倍率)成分の取り出し
            </summary>
            <param name="m"></param>
            <param name="rm">回転成分</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotateS(SlimDX.Matrix@)">
            <summary>
            回転(+倍率)成分の取り出し
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotateS(SlimDX.Matrix)">
            <summary>
            回転(+倍率)成分の取り出し
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotateS">
            <summary>
            回転(+倍率)成分の取り出し
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotate(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
            回転成分の取り出し(倍率変化がない場合はSubRotateS()の方が高速／0倍率の場合、不定数になるので注意)
            </summary>
            <param name="m"></param>
            <param name="rm">回転成分</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotate(SlimDX.Matrix@)">
            <summary>
            回転成分の取り出し(倍率変化がない場合はSubRotateS()の方が高速／0倍率の場合、不定数になるので注意)
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotate(SlimDX.Matrix)">
            <summary>
            回転成分の取り出し(倍率変化がない場合はSubRotateS()の方が高速／0倍率の場合、不定数になるので注意)
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubRotate">
            <summary>
            回転成分の取り出し(倍率変化がない場合はSubRotateS()の方が高速／0倍率の場合、不定数になるので注意)
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.M.SubSRT(SlimDX.Matrix@,SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@)">
            <summary>
            倍率／回転／移動成分の取り出し
            </summary>
            <param name="m">行列</param>
            <param name="scale">倍率</param>
            <param name="rot">回転</param>
            <param name="trans">移動</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubSRT(SlimDX.Vector3@,SlimDX.Quaternion@,SlimDX.Vector3@)">
            <summary>
            倍率／回転／移動成分の取り出し
            </summary>
            <param name="scale">倍率</param>
            <param name="rot">回転</param>
            <param name="trans">移動</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubSRT(SlimDX.Matrix@,SlimDX.Vector3@,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
            倍率／回転／移動成分の取り出し
            </summary>
            <param name="m">行列</param>
            <param name="scale">倍率</param>
            <param name="rm">回転</param>
            <param name="trans">移動</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SubSRT(SlimDX.Vector3@,SlimDX.Matrix@,SlimDX.Vector3@)">
            <summary>
            倍率／回転／移動成分の取り出し
            </summary>
            <param name="scale">倍率</param>
            <param name="rm">回転</param>
            <param name="trans">移動</param>
        </member>
        <member name="M:PEPlugin.SDX.M.SetTrans(SlimDX.Matrix@,SlimDX.Vector3)">
            <summary>
            移動成分のみ設定
            </summary>
            <param name="m"></param>
            <param name="trans"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.AddTrans(SlimDX.Matrix@,SlimDX.Vector3)">
            <summary>
            移動成分のみ加算
            </summary>
            <param name="m"></param>
            <param name="trans"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.MulTrans(SlimDX.Matrix@,SlimDX.Vector3)">
            <summary>
            移動成分のみ積算
            </summary>
            <param name="m"></param>
            <param name="trans"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.SetRotateS(SlimDX.Matrix@,SlimDX.Matrix@)">
            <summary>
            回転(+倍率)成分のみ設定
            </summary>
            <param name="m"></param>
            <param name="rs"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.Invert">
            <summary>逆行列化</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.GetInvert">
            <summary>逆行列取得</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.SetIdentity">
            <summary>単位行列化</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M11">
            <summary>1行1列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M12">
            <summary>1行2列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M13">
            <summary>1行3列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M14">
            <summary>1行4列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M21">
            <summary>2行1列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M22">
            <summary>2行2列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M23">
            <summary>2行3列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M24">
            <summary>2行4列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M31">
            <summary>3行1列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M32">
            <summary>3行2列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M33">
            <summary>3行3列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M34">
            <summary>3行4列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M41">
            <summary>4行1列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M42">
            <summary>4行2列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M43">
            <summary>4行3列要素</summary>
        </member>
        <member name="P:PEPlugin.SDX.M.M44">
            <summary>4行4列要素</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.SetZero">
            <summary>行列値を0設定</summary>
        </member>
        <member name="M:PEPlugin.SDX.M.Multiply(PEPlugin.Pmd.IPEMatrix)">
            <summary>
            行列積算(SlimDX側の行列使用を推奨)
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.M.Multiply(PEPlugin.Pmd.IPEMatrix,PEPlugin.Pmd.IPEMatrix)">
            <summary>
            行列積算(SlimDX側の行列使用を推奨)
            </summary>
            <param name="ml"></param>
            <param name="mr"></param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.SDX.Q">
            <summary>Quaternion | PEPlugin - SlimDX中継用</summary>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(PEPlugin.SDX.Q)">
            <summary>
            コンストラクタ
            </summary>
            <param name="q"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="degX"></param>
            <param name="degY"></param>
            <param name="degZ"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(SlimDX.Vector3)">
            <summary>
            コンストラクタ
            </summary>
            <param name="deg"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(SlimDX.Vector4)">
            <summary>
            コンストラクタ
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(PEPlugin.Pmd.IPEQuaternion)">
            <summary>
            コンストラクタ
            </summary>
            <param name="q"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(SlimDX.Quaternion)">
            <summary>
            コンストラクタ
            </summary>
            <param name="q"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToQuaternion">
            <summary>Quaternion(SlimDX)へ変換</summary>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(SlimDX.Matrix)">
            <summary>
            コンストラクタ
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(SlimDX.Matrix@)">
            <summary>
            コンストラクタ
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.#ctor(PEPlugin.SDX.M)">
            <summary>
            コンストラクタ
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.op_Implicit(PEPlugin.SDX.Q)~SlimDX.Quaternion">
            <summary>
            operator - Quaternion(SlimDX)へ変換
            </summary>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.op_Implicit(SlimDX.Quaternion)~PEPlugin.SDX.Q">
            <summary>
            operator - Quaternion(SlimDX)から変換
            </summary>
            <param name="qua"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.DegToRad(System.Single)">
            <summary>
            Degree -> Radian
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.D2R(System.Single)">
            <summary>
            Degree -> Radian
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.RadToDeg(System.Single)">
            <summary>
            Radian -> Degree
            </summary>
            <param name="rad"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.R2D(System.Single)">
            <summary>
            Radian -> Degree
            </summary>
            <param name="rad"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.DegToRad(SlimDX.Vector3)">
            <summary>
            Degree -> Radian
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.D2R(SlimDX.Vector3)">
            <summary>
            Degree -> Radian
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.RadToDeg(SlimDX.Vector3)">
            <summary>
            Radian -> Degree
            </summary>
            <param name="rad"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.R2D(SlimDX.Vector3)">
            <summary>
            Radian -> Degree
            </summary>
            <param name="rad"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromV4(PEPlugin.SDX.V4)">
            <summary>
            V4から変換
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToV4">
            <summary>
            V4へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDeg(System.Single,System.Single,System.Single)">
            <summary>
            3軸回転値(degree)から変換
            </summary>
            <param name="degX"></param>
            <param name="degY"></param>
            <param name="degZ"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDeg(SlimDX.Vector3)">
            <summary>
            3軸回転値(degree)から変換
            </summary>
            <param name="deg"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDeg(PEPlugin.SDX.V3)">
            <summary>
            3軸回転値(degree)から変換
            </summary>
            <param name="deg"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToDeg">
            <summary>
            3軸回転値(degree)へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromRad(System.Single,System.Single,System.Single)">
            <summary>
            3軸回転値(radian)から変換
            </summary>
            <param name="radX"></param>
            <param name="radY"></param>
            <param name="radZ"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromRad(SlimDX.Vector3)">
            <summary>
            3軸回転値(radian)から変換
            </summary>
            <param name="rad"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromRad(PEPlugin.SDX.V3)">
            <summary>
            3軸回転値(radian)から変換
            </summary>
            <param name="rad"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToRad">
            <summary>
            3軸回転値(radian)へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromMatrix(SlimDX.Matrix@)">
            <summary>
            回転行列から変換
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromM(PEPlugin.SDX.M)">
            <summary>
            回転行列から変換
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToMatrix">
            <summary>
            回転行列へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.ToM">
            <summary>
            回転行列へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDirection(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            任意の方向へ回転
            </summary>
            <param name="dstFront">回転先の前方向</param>
            <param name="dstUp">回転先の上方向</param>
            <param name="srcFront">回転元の前方向</param>
            <param name="srcUp">回転元の上方向</param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDirection(SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            任意の方向へ回転(回転元の前:-Z, 回転元の上:Y)
            </summary>
            <param name="dstFront">回転先の前方向</param>
            <param name="dstUp">回転先の上方向</param>
        </member>
        <member name="M:PEPlugin.SDX.Q.FromDirection(SlimDX.Vector3)">
            <summary>
            任意の方向へ回転(回転元の前:-Z, 回転元／先の上:Y)
            </summary>
            <param name="dstFront">回転先の前方向</param>
        </member>
        <member name="M:PEPlugin.SDX.Q.Dir(SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3,SlimDX.Vector3)">
            <summary>
            任意の方向へ回転で作成
            </summary>
            <param name="dstFront">回転先の前方向</param>
            <param name="dstUp">回転先の上方向</param>
            <param name="srcFront">回転元の前方向</param>
            <param name="srcUp">回転元の上方向</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.SDX.Q.Invert">
            <summary>逆行列化</summary>
        </member>
        <member name="M:PEPlugin.SDX.Q.GetInvert">
            <summary>逆行列取得</summary>
        </member>
        <member name="M:PEPlugin.SDX.Q.SetIdentity">
            <summary>単位行列化</summary>
        </member>
        <member name="P:PEPlugin.SDX.Q.X">
            <summary>X(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.Q.Y">
            <summary>Y(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.Q.Z">
            <summary>Z(PEPlugin)</summary>
        </member>
        <member name="P:PEPlugin.SDX.Q.W">
            <summary>W(PEPlugin)</summary>
        </member>
        <member name="T:PEPlugin.Vmd.PEVmdBonePose">
            <summary>ボーンの変形状態</summary>
        </member>
        <member name="F:PEPlugin.Vmd.PEVmdBonePose.T">
            <summary>移動量</summary>
        </member>
        <member name="F:PEPlugin.Vmd.PEVmdBonePose.R">
            <summary>回転量</summary>
        </member>
        <member name="M:PEPlugin.Vmd.PEVmdBonePose.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:PEPlugin.Vmd.PEVmdBonePose.#ctor(PEPlugin.Vmd.PEVmdBonePose)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdBonePoseState">
            <summary>
            ボーンの変形状態を管理(内部キーの状態に関係なく指定のフレーム位置で取得可能)
            </summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.FromVmd(PEPlugin.Vmd.IPEVmd,System.Int32)">
            <summary>
            Vmdから作成
            </summary>
            <param name="vmd">Vmd</param>
            <param name="boneIndex">ボーンIndex</param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.FromPoseArray(PEPlugin.Vmd.PEVmdBonePose[])">
            <summary>
            変形状態列から作成
            </summary>
            <param name="arr">状態列</param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.ToPoseArray">
            <summary>
            変形状態列へ変換
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.ToBoneKeyArray(System.Int32,System.Int32)">
            <summary>
            全フレーム配置のVmdBoneKey列へ変換(補間設定は直線形状)
            </summary>
            <param name="boneIndex">ボーンIndex</param>
            <param name="startOffset">開始フレームのオフセット量</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.Clear">
            <summary>初期化</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdBonePoseState.GetPose(System.Int32)">
            <summary>
            任意フレームのボーン変形状態
            </summary>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmd">
            <summary>プラグイン用VMD</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.ModelName">
            <summary>モデル名</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.Bone">
            <summary>ボーンキーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.Morph">
            <summary>モーフ(表情)キーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.Camera">
            <summary>カメラキーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.Light">
            <summary>照明キーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.SelfShadow">
            <summary>セルフ影キーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.VisibleIK">
            <summary>表示／IKキーリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmd.FilePath">
            <summary>VMDファイルパス(FromFile()で読み込む場合自動設定:各プレビュー処理に使用)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.SetBoneNames(System.String[])">
            <summary>
            ボーン名の設定 - 各ボーンキーでのIndex対応
            </summary>
            <param name="names">ボーン名列</param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetBoneName(System.Int32)">
            <summary>
            ボーン名の取得 - 見つからない場合はnull
            </summary>
            <param name="index">ボーンIndex</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetBoneNames">
            <summary>
            ボーン名の一括取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetBoneIndex(System.String)">
            <summary>
            ボーンIndexの取得 - 見つからない場合は-1
            </summary>
            <param name="name">ボーン名</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.SetMorphNames(System.String[])">
            <summary>
            モーフ(表情)名の設定 - 各モーフ(表情)キーでのIndex対応
            </summary>
            <param name="names">モーフ(表情)名列</param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetMorphName(System.Int32)">
            <summary>
            モーフ(表情)名の取得 - 見つからない場合はnull
            </summary>
            <param name="index">モーフ(表情)Index</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetMorphNames">
            <summary>
            モーフ(表情)名の一括取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.GetMorphIndex(System.String)">
            <summary>
            モーフ(表情)Indexの取得 - 見つからない場合は-1
            </summary>
            <param name="name">モーフ(表情)名</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.SetNamesFromPmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            モデル／ボーン／モーフ(表情)名の一括設定
            </summary>
            <param name="pmd">PMDモデル</param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.Init(PEPlugin.Pmd.IPEPmd)">
            <summary>
            PMDからの初期化
            </summary>
            <param name="pmd"></param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.Init(PEPlugin.Pmx.IPXPmx)">
            <summary>
            PMXからの初期化
            </summary>
            <param name="pmx"></param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.ClearKeys">
            <summary>
            全てのキーの初期化
            </summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.NormalizeKeys">
            <summary>
            キーの正規化 - 登録キーをFrameIndex順に並べ替え／FrameIndex重複キーの削除(後登録優先)
            </summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimStartBlankKeys">
            <summary>先頭の空白キーのトリミング(空白分全体をフレームシフト)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimKeys">
            <summary>関連キーのトリミング(不要キーの削除)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimBoneKeys">
            <summary>ボーンキーのトリミング(不要キーの削除)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimMorphKeys">
            <summary>モーフキーのトリミング(不要キーの削除)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimCameraKeys">
            <summary>カメラキーのトリミング(不要キーの削除)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.TrimLightKeys">
            <summary>照明キーのトリミング(不要キーの削除)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.SetModelNameForCameraLight">
            <summary>カメラ／照明用としてモデル名を設定</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.FromFile(System.String)">
            <summary>
            VMDファイルから読み込み(事前に各キー名称が設定されていない場合、各部のIndex順が正しく読み込まれないので注意)
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmd.ToFile(System.String,System.Boolean)">
            <summary>
            VMDファイルへ保存(各部名称が空／未設定Indexの場合、対象キーは保存されないので注意) ※MMDのカメラ／照明用とするには SetModelNameForCameraLight() を事前に呼び出しておく必要がある。
            </summary>
            <param name="path"></param>
            <param name="trimKeys">true:不要キーの削除</param>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdFrameKey">
            <summary>VMDキー管理基底インターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdFrameKey.FrameIndex">
            <summary>フレームIndex</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdIPL">
            <summary>VMD補間値(座標x2)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIPL.X1">
            <summary>左下X(0-127)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIPL.Y1">
            <summary>左下Y(0-127)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIPL.X2">
            <summary>右上X(0-127)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIPL.Y2">
            <summary>右上Y(0-127)</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdIPL.SetLinear">
            <summary>標準状態(線形)へ戻す</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdBoneKey">
            <summary>VMDボーンキー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.BoneIndex">
            <summary>ボーンIndex</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.Translation">
            <summary>移動量</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.Rotation">
            <summary>回転量</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.IplX">
            <summary>補間:移動X</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.IplY">
            <summary>補間:移動Y</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.IplZ">
            <summary>補間:移動Z</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.IplR">
            <summary>補間:回転</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdBoneKey.PhysicsOff">
            <summary>物理OFF</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdMorphKey">
            <summary>VMDモーフ(表情)キー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdMorphKey.MorphIndex">
            <summary>モーフ(表情)Index</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdMorphKey.Value">
            <summary>変化量 0～1</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdCameraKey">
            <summary>VMDカメラキー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.Distance">
            <summary>視点までの距離(MMDの表示とは符号が逆になるので注意)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.Position">
            <summary>注視点位置</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.Angle">
            <summary>カメラ方向(X/Y/Z-3軸制御 rad)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.FOV">
            <summary>視野角(X角 deg)</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IsPers">
            <summary>パースON／OFF</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplX">
            <summary>補間:移動X</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplY">
            <summary>補間:移動Y</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplZ">
            <summary>補間:移動Z</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplR">
            <summary>補間:回転</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplD">
            <summary>補間:距離</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdCameraKey.IplFOV">
            <summary>補間:視野角</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdLightKey">
            <summary>VMD照明キー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdLightKey.Color">
            <summary>照明色</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdLightKey.Direction">
            <summary>照明方向</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdSelfShadowKey">
            <summary>VMDセルフ影キー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdSelfShadowKey.Mode">
            <summary>モード - 0:OFF 1:Mode1 2:Mode2</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdSelfShadowKey.Distance">
            <summary>距離 - 0.1 - (d * 0.00001) ?</summary>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdVisibleIKKey">
            <summary>VMD表示／IKキー</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdVisibleIKKey.Visible">
            <summary>表示</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdVisibleIKKey.IK">
            <summary>IK有効状態</summary>
        </member>
        <member name="M:PEPlugin.Vmd.IPEVmdVisibleIKKey.SetIK(System.Int32[],System.Boolean[])">
            <summary>
            IK設定
            </summary>
            <param name="indices">IKボーンIndex列</param>
            <param name="enable">有効状態列</param>
        </member>
        <member name="T:PEPlugin.Vmd.IPEVmdIKEnable">
            <summary>VMD IK有効状態</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIKEnable.IKBoneIndex">
            <summary>IKボーンIndex</summary>
        </member>
        <member name="P:PEPlugin.Vmd.IPEVmdIKEnable.Enable">
            <summary>IK有効状態</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeElement">
            <summary>VME要素(基底用)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeElement.Extern">
            <summary>VMDオブジェクトの外部参照(呼び出し先からの書き換えによりデータ構造を破壊することも可能なので使用には注意) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeElement.Enable">
            <summary>有効状態</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeElement.Name">
            <summary>要素名</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeEventElement">
            <summary>VMEイベント要素</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeObject">
            <summary>VME要素 - VMEに標準登録されているオブジェクト対象</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeObject.Bone">
            <summary>ボーンリスト get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeObject.Morph">
            <summary>モーフ(表情)リスト</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeObject.Camera">
            <summary>カメラ get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeObject.Light">
            <summary>照明 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.PEVmePreviewOption">
            <summary>VMEプレビューオプション</summary>
        </member>
        <member name="P:PEPlugin.Vme.PEVmePreviewOption.BeginFrame">
            <summary>開始フレーム</summary>
        </member>
        <member name="P:PEPlugin.Vme.PEVmePreviewOption.EndFrame">
            <summary>終了フレーム</summary>
        </member>
        <member name="P:PEPlugin.Vme.PEVmePreviewOption.ShowBone">
            <summary>ボーン表示</summary>
        </member>
        <member name="M:PEPlugin.Vme.PEVmePreviewOption.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.PEVmePreviewOption.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            コンストラクタ
            </summary>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="showBone"></param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVme">
            <summary>
            プラグイン用VMEインターフェイス
            ■イベント追加型制御、各生成キーは全フレーム制御が基本になる(軽量化措置は未設定)
            ■PMD／PMXから初期化→ボーン変形有効／任意のボーン追加不可能
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.AddBone(System.String,SlimDX.Vector3)">
            <summary>
            ボーン追加(PMDから初期化した場合は例外終了)
            </summary>
            <param name="name">ボーン名</param>
            <param name="pos">ボーンの初期位置</param>
            <returns>追加したボーンの参照</returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.RemoveBone(PEPlugin.Vme.IPEVmeBone)">
            <summary>
            リストからボーンの削除(PMDから初期化した場合は例外終了)
            </summary>
            <param name="bone">削除ボーン</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.AddMorph(System.String)">
            <summary>
            モーフ追加(PMDから初期化した場合は例外終了)
            </summary>
            <param name="name">モーフ名</param>
            <returns>追加したモーフの参照</returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.RemoveMorph(PEPlugin.Vme.IPEVmeSingleValueElement)">
            <summary>
            リストからモーフの削除(PMDから初期化した場合は例外終了)
            </summary>
            <param name="morph">削除モーフ</param>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.Pmd">
            <summary>対象PMD(PMDから初期した場合のみ有効)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.EnablePmd">
            <summary>有効なPMDから初期化した場合true</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.Pmx">
            <summary>対象PMX(PMXから初期した場合のみ有効)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.EnablePmx">
            <summary>有効なPMXから初期化した場合true</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.LastFrame">
            <summary>登録されている最後のフレームを取得</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Init(PEPlugin.Pmd.IPEPmd)">
            <summary>
            PMDで初期化
            </summary>
            <param name="pmd">PMD参照(null:PMD無効状態で初期化)</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.InitFromPmx(PEPlugin.Pmx.IPXPmx)">
            <summary>
            PMXで初期化
            </summary>
            <param name="pmx">PMX参照(null:PMX無効状態で初期化)</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Clear">
            <summary>初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.CreateGroupBone(System.Boolean)">
            <summary>
            グループボーンの作成
            </summary>
            <param name="all">true:現在のボーンを全て追加する</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.CreateGroupBone(System.Int32[])">
            <summary>
            グループボーンの作成
            </summary>
            <param name="index">任意のIndex列(範囲外は対象外)</param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.GroupBone">
            <summary>ボーンのグループ参照(全ボーン:内部で自動作成) get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.CreateGroupMorph(System.Boolean)">
            <summary>
            グループモーフの作成
            </summary>
            <param name="all">true:現在のモーフを全て追加する</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.CreateGroupMorph(System.Int32[])">
            <summary>
            グループモーフの作成
            </summary>
            <param name="index">任意のIndex列(範囲外は対象外)</param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVme.GroupMorph">
            <summary>モーフのグループ参照(全モーフ:内部で自動作成) get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.SetVmd(PEPlugin.Vmd.IPEVmd)">
            <summary>
            VMDからイベント登録(現在状態にイベント追加)
            </summary>
            <param name="vmd">VMD</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.SetVmeResult(PEPlugin.Vme.IPEVmeResult)">
            <summary>
            実行結果をイベント登録(現在状態にイベント追加)
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Run(System.Int32,System.Int32)">
            <summary>
            イベント実行 - 登録したイベントによりフレームの各状態を生成／出力
            </summary>
            <param name="begin">開始フレーム(0以降)</param>
            <param name="end">終了フレーム</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Run">
            <summary>
            イベント実行(登録されたイベントのフレーム範囲) - 登録したイベントによりフレームの各状態を生成／出力
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Preview(PEPlugin.Pmd.IPEPmd,PEPlugin.Vme.PEVmePreviewOption)">
            <summary>
            VmdViewで直接プレビュー(登録されたイベントのフレーム範囲)
            </summary>
            <param name="pmd">再生用PMD</param>
            <param name="option">プレビューオプション</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Preview(PEPlugin.Pmx.IPXPmx,PEPlugin.Vme.PEVmePreviewOption)">
            <summary>
            VmdViewで直接プレビュー(登録されたイベントのフレーム範囲)
            </summary>
            <param name="pmx"></param>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVme.Preview(PEPlugin.Vme.PEVmePreviewOption)">
            <summary>
            VmdViewで直接プレビュー(登録されたイベントのフレーム範囲)
            </summary>
            <param name="option">プレビューオプション</param>
        </member>
        <member name="T:PEPlugin.Vme.PEVmeEvent">
            <summary>
            PEVmeイベントデリゲート
            </summary>
            <param name="state">状態変数</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeFrameEvent">
            <summary>指定フレームでの駆動イベント用インターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeFrameEvent.EventCount">
            <summary>登録済みイベント数 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeFrameEvent.LastFrame">
            <summary>登録イベントの最終フレーム get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.ClearEvents">
            <summary>イベントのクリア</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.SetEvent(System.Int32,PEPlugin.Vme.PEVmeEvent,System.Int32)">
            <summary>
            イベントを追加登録
            </summary>
            <param name="frame">登録フレーム</param>
            <param name="ev">イベント処理 : (IES state)=>{}</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.SetEvent(System.Int32,System.Action,System.Int32)">
            <summary>
            イベントを追加登録(イベント変数を取らない処理)
            </summary>
            <param name="frame">登録フレーム</param>
            <param name="ev">イベント処理 : ()=>{}</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.SetEvent(System.Int32,System.Int32,PEPlugin.Vme.PEVmeEvent,System.Int32)">
            <summary>
            フレーム範囲内にイベントを追加登録
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="ev">イベント処理 : (IES state)=>{}</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.SetEvent(System.Int32,System.Int32,System.Action,System.Int32)">
            <summary>
            フレーム範囲内にイベントを追加登録(イベント変数を取らない処理)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="ev">イベント処理 : ()=>{}</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.GetEvents(System.Int32,System.Int32)">
            <summary>
            登録イベントを取得
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.RemoveEvent(PEPlugin.Vme.PEVmeEvent)">
            <summary>
            登録イベントから削除
            </summary>
            <param name="ev">対象イベント</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.RemoveEvent(System.Int32,System.Int32)">
            <summary>
            指定フレーム／IDの登録イベント削除
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeFrameEvent.RunEvent(System.Int32,System.Int32)">
            <summary>
            登録イベントを実行
            </summary>
            <param name="frame">駆動フレーム</param>
            <param name="id">イベントID:識別用</param>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeFrameEvent.IsRunning">
            <summary>イベント実行中 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeEventState">
            <summary>イベント処理の状態インターフェイス(基底クラス用)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeEventState.StartFrame">
            <summary>開始フレーム get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeEventState.Frame">
            <summary>呼び出し時のフレーム get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeEventState.Extern">
            <summary>VME要素の外部参照(呼び出し先からの書き換えによりデータ構造を破壊することも可能なので注意) get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeSingleValueState">
            <summary>単一値の状態変数</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValueState.V">
            <summary>値(Value短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValueState.Value">
            <summary>値 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeSingleValueElement">
            <summary>
            VME単一値インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueElement.ToValueState(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態から値状態を取得 - 取得できない場合はnull
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueElement.ToVS(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態から値状態を取得(ToValueState短絡) - 取得できない場合はnull
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValueElement.VS">
            <summary>現在の値状態(短絡)(state as IPEVmeValueState) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValueElement.V">
            <summary>イベント設定(Value短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValueElement.Value">
            <summary>イベント設定 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeGroup">
            <summary>グループ用イベント処理</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.ClearGroup">
            <summary>グループの初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.AddElement(PEPlugin.Vme.IPEVmeEventElement)">
            <summary>グループへ対象の追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.AddElements(PEPlugin.Vme.IPEVmeEventElement[])">
            <summary>グループへ対象の複数追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.RemoveElement(PEPlugin.Vme.IPEVmeEventElement)">
            <summary>グループから対象の削除</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.GetElement(System.Int32)">
            <summary>グループ要素の取得</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.GetGroupElements">
            <summary>グループ要素の列取得</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeGroup.GroupCount">
            <summary>グループの要素数</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.ForEach``1(System.Action{``0})">
            <summary>
            全てのグループ対象を処理
            </summary>
            <typeparam name="T">グループ要素の型 : IPEVmeEventElement派生</typeparam>
            <param name="proc">処理</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroup.ForEach``1(System.Action{System.Int32,``0})">
            <summary>
            全てのグループ対象をIndex付きで処理(Index値はグループへ登録したIndex順序)
            </summary>
            <typeparam name="T">グループ要素の型(Index付き) : IPEVmeEventElement派生</typeparam>
            <param name="proc">処理</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeGroupBone">
            <summary>ボーングループ用イベント処理</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupBone.AddBone(PEPlugin.Vme.IPEVmeBone)">
            <summary>グループへボーン対象の追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupBone.AddBones(PEPlugin.Vme.IPEVmeBone[])">
            <summary>グループへ対象のボーン複数追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupBone.RemoveBone(PEPlugin.Vme.IPEVmeBone)">
            <summary>グループからボーン対象の削除</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupBone.GetGroupBones">
            <summary>グループボーン要素の取得</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupBone.GetBone(System.Int32)">
            <summary>ボーン要素の取得</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeGroupMorph">
            <summary>モーフグループ用イベント処理</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupMorph.AddMorph(PEPlugin.Vme.IPEVmeSingleValueElement)">
            <summary>グループへモーフ対象の追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupMorph.AddMorphs(PEPlugin.Vme.IPEVmeSingleValueElement[])">
            <summary>グループへ対象のモーフ複数追加</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupMorph.RemoveMorph(PEPlugin.Vme.IPEVmeSingleValueElement)">
            <summary>グループからモーフ対象の削除</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupMorph.GetGroupMorphs">
            <summary>グループモーフ要素の取得</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeGroupMorph.GetMorph(System.Int32)">
            <summary>モーフ要素の取得</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmePrimaryValue`1">
            <summary>
            代表値
            </summary>
            <typeparam name="TValue">代表値の型</typeparam>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePrimaryValue`1.PV">
            <summary>代表値(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePrimaryValue`1.PrimaryValue">
            <summary>代表値</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeSingleValue">
            <summary>単一値</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValue.V">
            <summary>速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValue.A">
            <summary>加速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValue.Velocity">
            <summary>速度</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeSingleValue.Acceleration">
            <summary>加速度</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeVectorValue">
            <summary>ベクトル量</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeVectorValue.V">
            <summary>速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeVectorValue.A">
            <summary>加速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeVectorValue.Velocity">
            <summary>速度</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeVectorValue.Acceleration">
            <summary>加速度</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeQuaternionValue">
            <summary>回転量</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeQuaternionValue.V">
            <summary>回転量-速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeQuaternionValue.A">
            <summary>回転量-加速度(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeQuaternionValue.Velocity">
            <summary>回転量-速度</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeQuaternionValue.Acceleration">
            <summary>回転量-加速度</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmePosition">
            <summary>位置(global位置) - 設定値は移動量へリダイレクト</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePosition.P">
            <summary>位置(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePosition.Position">
            <summary>位置</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePosition.InitialPosition">
            <summary>初期位置 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePosition.IP">
            <summary>初期位置(短絡) get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeDirection">
            <summary>方向(global方向) - 設定値は回転量へリダイレクト</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeDirection.D">
            <summary>方向(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeDirection.Direction">
            <summary>方向</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeScale">
            <summary>スケール</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeScale.GS">
            <summary>グローバルスケール(短絡)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeScale.GlobalScale">
            <summary>グローバルスケール</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeSingleValueOperator">
            <summary>値演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.Clear">
            <summary>全て初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.ClearV">
            <summary>速度の初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.ClearA">
            <summary>加速の初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.Update">
            <summary>
            速度／加速度で現在量を更新
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.Get">
            <summary>
            値取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.Set(System.Single,PEPlugin.Vme.OpType)">
            <summary>
            値設定
            </summary>
            <param name="v">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.GetV">
            <summary>
            速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.SetV(System.Single,PEPlugin.Vme.OpType)">
            <summary>
            速度設定(移動分のみ)
            </summary>
            <param name="v">設定値(オフセット量)</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.GetA">
            <summary>
            加速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueOperator.SetA(System.Single,PEPlugin.Vme.OpType)">
            <summary>
            加速度設定(移動分のみ)
            </summary>
            <param name="v">設定値(オフセット量)</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeVectorValueOperator">
            <summary>ベクトル量演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.Clear">
            <summary>全て初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.ClearV">
            <summary>速度の初期化(単位行列設定)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.ClearA">
            <summary>加速の初期化(単位行列設定)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.Update">
            <summary>
            速度／加速度で現在量を更新
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.Get">
            <summary>
            ベクトル量取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.Set(SlimDX.Vector3,PEPlugin.Vme.OpType)">
            <summary>
            ベクトル量設定
            </summary>
            <param name="v">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.GetV">
            <summary>
            速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.SetV(SlimDX.Vector3,PEPlugin.Vme.OpType)">
            <summary>
            速度設定(移動分のみ)
            </summary>
            <param name="v">設定値(ベクトル量)</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.SetV(SlimDX.Matrix,PEPlugin.Vme.OpType)">
            <summary>
            速度設定(行列指定)
            </summary>
            <param name="m">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.GetA">
            <summary>
            加速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.SetA(SlimDX.Vector3,PEPlugin.Vme.OpType)">
            <summary>
            加速度設定(移動分のみ)
            </summary>
            <param name="v">設定値(ベクトル量)</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueOperator.SetA(SlimDX.Matrix,PEPlugin.Vme.OpType)">
            <summary>
            加速度設定(行列指定)
            </summary>
            <param name="m">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeQuaternionValueOperator">
            <summary>回転量演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.Clear">
            <summary>全て初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.ClearV">
            <summary>速度の初期化(単位量設定)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.ClearA">
            <summary>加速の初期化(単位量設定)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.Update">
            <summary>
            速度／加速度で現在量を更新
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.Get">
            <summary>
            回転量取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.Set(SlimDX.Quaternion,PEPlugin.Vme.OpType)">
            <summary>
            回転量設定
            </summary>
            <param name="q">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.GetV">
            <summary>
            回転速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.SetV(SlimDX.Quaternion,PEPlugin.Vme.OpType)">
            <summary>
            回転速度設定
            </summary>
            <param name="q">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.GetA">
            <summary>
            回転加速度取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueOperator.SetA(SlimDX.Quaternion,PEPlugin.Vme.OpType)">
            <summary>
            回転加速度設定
            </summary>
            <param name="q">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmePositionOperator">
            <summary>位置演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionOperator.Clear">
            <summary>初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionOperator.Get">
            <summary>
            位置取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionOperator.Set(SlimDX.Vector3,PEPlugin.Vme.OpType)">
            <summary>
            位置設定(内部的には移動量へリダイレクトするので注意)
            </summary>
            <param name="p">位置(設定値)</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionOperator.GetIP">
            <summary>
            初期位置取得
            </summary>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeDirectionOperator">
            <summary>方向演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionOperator.Clear">
            <summary>初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionOperator.Get">
            <summary>
            方向取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionOperator.Set(SlimDX.Quaternion,PEPlugin.Vme.OpType)">
            <summary>
            方向設定
            </summary>
            <param name="q">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeScalingOperator">
            <summary>スケール演算インターフェイス</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingOperator.GetGS">
            <summary>
            グローバルスケール量取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingOperator.SetGS(SlimDX.Vector3,PEPlugin.Vme.OpType)">
            <summary>
            グローバルスケール量設定
            </summary>
            <param name="v">設定値</param>
            <param name="op">Set／Add／Mul</param>
        </member>
        <member name="T:PEPlugin.Vme.StateProc`2">
            <summary>
            状態からの汎用取得処理delegate (※表示名が不正:StateProc)
            </summary>
            <typeparam name="T">取得値の型</typeparam>
            <typeparam name="TState">状態の型</typeparam>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.StateValueProc">
            <summary>
            状態から値取得処理delegate
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.StateVectorProc">
            <summary>
            状態からベクトル取得処理delegate
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.StateMatrixProc">
            <summary>
            状態から行列取得処理delegate
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.StateQuaternionProc">
            <summary>
            状態からクォータニオン取得処理delegate
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Vme.OpType">
            <summary>イベント演算処理で用いる算術タイプ</summary>
        </member>
        <member name="F:PEPlugin.Vme.OpType.Set">
            <summary>直値設定(強制上書き)</summary>
        </member>
        <member name="F:PEPlugin.Vme.OpType.Add">
            <summary>加算</summary>
        </member>
        <member name="F:PEPlugin.Vme.OpType.Mul">
            <summary>積算</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeSingleValueEventOperator">
            <summary>単一値演算インターフェイス - イベント設定用</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetZero(System.Int32,System.Int32)">
            <summary>
            初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetZeroV(System.Int32,System.Int32)">
            <summary>
            速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetZeroA(System.Int32,System.Int32)">
            <summary>
            加速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.Set(System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            値設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="off">値</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.Set(System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            値設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">値取得処理 :(IES state)=>{return:float}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetV(System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="v">速度(値/フレーム)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetV(System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">速度(値/フレーム)取得処理 :(IES state)=>{return:float}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetA(System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="a">加速度(速度/フレーム)</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetA(System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">加速度(速度/フレーム)取得処理 :(IES state)=>{return:float}</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.Set(System.Int32,System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            値設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="off">値</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.Set(System.Int32,System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            値設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">値取得処理 :(IES state)=>{return:float}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetV(System.Int32,System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="v">速度(値/フレーム)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetV(System.Int32,System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">速度(値/フレーム)取得処理 :(IES state)=>{return:float}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetA(System.Int32,System.Int32,System.Single,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="a">加速度(速度/フレーム)</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeSingleValueEventOperator.SetA(System.Int32,System.Int32,PEPlugin.Vme.StateValueProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">加速度(速度/フレーム)取得処理 :(IES state)=>{return:float}</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeVectorValueEventOperator">
            <summary>ベクトル量演算インターフェイス - イベント設定用</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetZero(System.Int32,System.Int32)">
            <summary>
            ベクトル量初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetZeroV(System.Int32,System.Int32)">
            <summary>
            速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetZeroA(System.Int32,System.Int32)">
            <summary>
            加速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.Set(System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            ベクトル量設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="val">ベクトル量</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.Set(System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            ベクトル量設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">ベクトル量取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="v">速度(ベクトル量/フレーム)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">速度(ベクトル量/フレーム)取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,SlimDX.Matrix,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(行列指定)
            </summary>
            <param name="frame">フレーム</param>
            <param name="m">速度行列(次フレーム変移量 = ベクトル量 * 速度行列)</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,PEPlugin.Vme.StateMatrixProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">速度行列(次フレーム変移量 = ベクトル量 * 速度行列)取得処理 :(IES state)=>{return:Matrix}</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="a">加速度(速度/フレーム)</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">加速度(速度/フレーム)取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,SlimDX.Matrix,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="m">加速度行列(次フレーム速度 = 速度 * 加速度行列)</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,PEPlugin.Vme.StateMatrixProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">加速度行列(次フレーム速度 = 速度 * 加速度行列)取得処理 :(IES state)=>{return:Matrix}</param>
            <param name="op"></param>
            <param name="id"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.Set(System.Int32,System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            ベクトル量設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="trans">ベクトル量</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.Set(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            ベクトル量設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">ベクトル量取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="v">速度(ベクトル量/フレーム)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">速度(ベクトル量/フレーム)取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,System.Int32,SlimDX.Matrix,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲／行列指定)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="m">速度行列(次フレーム変移量 = ベクトル量 * 速度行列)</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetV(System.Int32,System.Int32,PEPlugin.Vme.StateMatrixProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            速度設定(フレーム範囲／行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">速度行列(次フレーム変移量 = ベクトル量 * 速度行列)取得処理 :(IES state)=>{return:Matrix}</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="a">加速度(速度/フレーム)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">加速度(速度/フレーム)取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,System.Int32,SlimDX.Matrix,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲／行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="m">加速度行列(次フレーム速度 = 速度 * 加速度行列)</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeVectorValueEventOperator.SetA(System.Int32,System.Int32,PEPlugin.Vme.StateMatrixProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            加速度設定(フレーム範囲／行列指定) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">加速度行列(次フレーム速度 = 速度 * 加速度行列)取得処理 :(IES state)=>{return:Matrix}</param>
            <param name="op">Set／Add／Mul Add:行列加算 Mul:行列積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator">
            <summary>回転量演算インターフェイス - イベント設定用</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetZero(System.Int32,System.Int32)">
            <summary>
            回転量初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetZeroV(System.Int32,System.Int32)">
            <summary>
            回転速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetZeroA(System.Int32,System.Int32)">
            <summary>
            回転加速度初期化
            </summary>
            <param name="frame">フレーム</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.Set(System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転量設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.Set(System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転量設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetV(System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetV(System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetA(System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転加速度設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetA(System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転加速度設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.Set(System.Int32,System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転量設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.Set(System.Int32,System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転量設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetV(System.Int32,System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetV(System.Int32,System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetA(System.Int32,System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転加速度設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeQuaternionValueEventOperator.SetA(System.Int32,System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            回転加速度設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmePositionEventOperator">
            <summary>位置演算インターフェイス - イベント設定用 : 移動量へリダイレクト(相互設定に注意)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Set(System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            位置設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="pos">位置</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Set(System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            位置設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Set(System.Int32,System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            位置設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="pos">位置</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Set(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            位置設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.MoveRange(System.Int32,System.Int32,SlimDX.Vector3,SlimDX.Vector3,System.Int32)">
            <summary>
            指定フレーム範囲で任意位置間の移動(全フレームに位置を直接設定)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="posSt">開始位置</param>
            <param name="posEd">終了位置</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Move(System.Int32,System.Int32,SlimDX.Vector3,SlimDX.Vector3,System.Int32)">
            <summary>
            指定フレーム範囲で任意位置間の移動(開始フレームに位置／速度のみ)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="posSt">開始位置</param>
            <param name="posEd">終了位置</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.Move(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.StateVectorProc,System.Int32)">
            <summary>
            指定フレーム範囲で任意位置間の移動(開始フレームに位置／速度のみ) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="procSt">開始位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="procEd">終了位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.MoveFree(System.Int32,SlimDX.Vector3[],System.Int32)">
            <summary>
            指定フレーム範囲で自由移動
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="pos">開始フレームから1フレーム毎の位置列</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.MoveFree(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,System.Int32)">
            <summary>
            指定フレーム範囲で自由移動 - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.MoveTo(System.Int32,System.Int32,SlimDX.Vector3,System.Int32)">
            <summary>
            フレーム開始位置から指定の場所まで移動(開始フレーム:目標までの速度設定 + 終了フレーム:速度初期化／目標位置設定)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="pos">目標位置</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePositionEventOperator.MoveTo(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,System.Int32)">
            <summary>
            フレーム開始位置から指定の場所まで移動(開始フレーム:目標までの速度設定 + 終了フレーム:速度初期化／目標位置設定) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">位置取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeDirectionEventOperator">
            <summary>方向演算インターフェイス - イベント設定用 : 回転量へリダイレクト(相互設定に注意)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionEventOperator.Set(System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            方向設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionEventOperator.Set(System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            方向設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionEventOperator.Set(System.Int32,System.Int32,SlimDX.Quaternion,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            方向設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="q">回転量(クォータニオン)</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用)</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeDirectionEventOperator.Set(System.Int32,System.Int32,PEPlugin.Vme.StateQuaternionProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            方向設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">回転量(クォータニオン)取得処理</param>
            <param name="op">Set／Add／Mul Add:Q加算 Mul:Q積算(オフセットは積算を使用) :(IES state)=>{return:Quaternion}</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeScalingEventOperator">
            <summary>スケール演算インターフェイス - イベント設定用</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingEventOperator.SetGS(System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            グローバルスケール設定
            </summary>
            <param name="frame">フレーム</param>
            <param name="scale">スケール</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingEventOperator.SetGS(System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            グローバルスケール設定 - 設定値の遅延計算用
            </summary>
            <param name="frame">フレーム</param>
            <param name="proc">スケール取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingEventOperator.SetGS(System.Int32,System.Int32,SlimDX.Vector3,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            グローバルスケール設定(フレーム範囲)
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="scale">スケール</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeScalingEventOperator.SetGS(System.Int32,System.Int32,PEPlugin.Vme.StateVectorProc,PEPlugin.Vme.OpType,System.Int32)">
            <summary>
            グローバルスケール設定(フレーム範囲) - 設定値の遅延計算用
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">スケール取得処理 :(IES state)=>{return:Vector3}</param>
            <param name="op">Set／Add／Mul</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.PEVmePathType">
            <summary>空間パスの補間タイプ</summary>
        </member>
        <member name="F:PEPlugin.Vme.PEVmePathType.Linear">
            <summary>直線</summary>
        </member>
        <member name="F:PEPlugin.Vme.PEVmePathType.Spline">
            <summary>スプライン曲線</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmePath">
            <summary>
            空間パス設定用 - 追加された位置列に対して開始位置からの距離で管理された空間パス
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePath.PathType">
            <summary>空間パスの補間タイプ</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePath.RangeMin">
            <summary>距離範囲の最小値(0固定) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmePath.RangeMax">
            <summary>距離範囲の最大値 get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.Clear">
            <summary>パスの初期化</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.SetPoint(SlimDX.Vector3[])">
            <summary>
            パスの位置(頂点)設定
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.AddPoint(SlimDX.Vector3)">
            <summary>
            パスの位置(頂点)に追加(事前に追加する位置が全て解っている場合はSetPoint()推奨)
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoint(System.Double)">
            <summary>
            任意距離点でのパスポイントを取得
            </summary>
            <param name="d">距離:0～</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoints(System.Double)">
            <summary>
            一定速度でのパスポイント列を取得 - 経路全てを通る
            </summary>
            <param name="v">取得点毎の速度</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoints(System.Double,System.Double,System.Double)">
            <summary>
            一定速度でのパスポイント列を取得
            </summary>
            <param name="st">開始範囲:0～</param>
            <param name="ed">終了範囲:0～</param>
            <param name="v">取得点毎の速度(例 st:0 ed:10 v:1 -> 11点取得)</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoints(System.Func{System.Double,System.Double})">
            <summary>
            任意速度でのパスポイント列を取得 - 経路全てを通る
            </summary>
            <param name="velProc">距離に対しての速度を返す関数 (double d) => { return v; }</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoints(System.Double,System.Double,System.Func{System.Double,System.Double})">
            <summary>
            任意速度でのパスポイント列を取得
            </summary>
            <param name="st">開始範囲:0～</param>
            <param name="ed">終了範囲:0～</param>
            <param name="velProc">距離に対しての速度を返す関数 (double d) => { return v; }</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetPathPoints(System.Int32,System.Int32,System.Func{System.Int32,System.Double})">
            <summary>
            フレームに対する距離位置からパスポイント列を取得
            </summary>
            <param name="frameSt">開始フレーム</param>
            <param name="frameEd">終了フレーム</param>
            <param name="proc">フレームに対しての距離を返す関数 (int frame) => { return p; }</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.SetPointFromBone(PEPlugin.Pmd.IPEPmd,System.Int32)">
            <summary>
            PMDのボーン位置からパス位置設定(親子に関係なく登録ボーンの位置で設定)
            </summary>
            <param name="pmd">PMD</param>
            <param name="maxCount">最大数(-1:全て登録)</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.SetPointFromVertex(PEPlugin.Pmd.IPEPmd,System.Int32)">
            <summary>
            PMDの頂点位置からパス位置設定
            </summary>
            <param name="pmd">PMD</param>
            <param name="maxCount">最大数(-1:全て登録)</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.GetDistanceAtPoint(System.Int32)">
            <summary>
            任意の設定位置での距離量を取得
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.RegisterPositionEvent(PEPlugin.Vme.IPEVmePositionEventOperator,System.Int32,SlimDX.Vector3[],System.Int32)">
            <summary>
            位置演算へイベント登録
            </summary>
            <param name="op">位置演算インターフェイス</param>
            <param name="frame">開始フレーム(以降全フレームに位置登録)</param>
            <param name="pos">フレーム毎の位置</param>
            <param name="id">ID</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.CreateFrontDirections(SlimDX.Vector3[],System.Int32,System.Boolean)">
            <summary>
            パス経路の前方向列を作成
            </summary>
            <param name="pos">パス位置</param>
            <param name="interval">interval差のパス位置間を方向とする</param>
            <param name="sameLength">true:出力列を入力と同じ列長さ(先頭～interval要素は方向先頭で埋) false:出力列長=入力-interval</param>
            <returns>方向ベクトル</returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmePath.RegisterDirectionEvent(PEPlugin.Vme.IPEVmeDirectionEventOperator,System.Int32,SlimDX.Vector3[],System.Int32)">
            <summary>
            方向演算へイベント登録 (前:-Z 上:Yで固定)
            </summary>
            <param name="op">方向演算インターフェイス</param>
            <param name="frame">開始フレーム(以降全フレームに方向登録)</param>
            <param name="dir">フレーム毎の方向ベクトル(CreateFrontDirections()の結果を想定)</param>
            <param name="id">ID</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeBoneState">
            <summary>ボーンの状態変数</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.T">
            <summary>移動量(Translation短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.Translation">
            <summary>移動量 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.R">
            <summary>回転量(Rotation短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.Rotation">
            <summary>回転量 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.P">
            <summary>位置(Position短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.Position">
            <summary>位置 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.D">
            <summary>方向(Direction短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.Direction">
            <summary>方向 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.S">
            <summary>スケール(Scale短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneState.Scale">
            <summary>スケール get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeBone">
            <summary>
            VMEボーンインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.IsTransformed">
            <summary>true:変形対象ボーン</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.InitialPosition">
            <summary>初期位置</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeBone.ToBoneState(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態からボーン状態を取得 - 取得できない場合はnull
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeBone.ToBS(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態からボーン状態を取得(ToBoneState短絡) - 取得できない場合はnull
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.BS">
            <summary>現在のボーン状態(短絡)(state as IPEVmeBoneState) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.T">
            <summary>移動量イベント設定(Translate短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.Translate">
            <summary>移動量イベント設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.R">
            <summary>回転量イベント設定(Rotate短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.Rotate">
            <summary>回転量イベント設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.P">
            <summary>位置イベント設定(Position短絡 get)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.Position">
            <summary>位置イベント設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.D">
            <summary>方向イベント設定(Direction短絡 get)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.Direction">
            <summary>方向イベント設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.S">
            <summary>スケールイベント設定(Scale短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBone.Scale">
            <summary>スケールイベント設定 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeCameraState">
            <summary>カメラ位置(注視点／上方向共用)の状態変数</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraState.T">
            <summary>移動量(Translation短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraState.Translation">
            <summary>移動量 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraState.P">
            <summary>位置(Position短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraState.Position">
            <summary>位置 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeCameraPosition">
            <summary>
            VMEカメラ位置インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.InitialPosition">
            <summary>初期位置</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCameraPosition.ToCameraState(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態からカメラ位置状態を取得 - 取得できない場合はnull
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCameraPosition.ToCS(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態からカメラ位置状態を取得(短絡) - 取得できない場合はnull
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.CS">
            <summary>現在のカメラ位置状態(短絡)(state as IPEVmeCameraState) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.T">
            <summary>移動量イベント設定(Translate短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.Translate">
            <summary>移動量イベント設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.P">
            <summary>位置イベント設定(Position短絡 get)</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraPosition.Position">
            <summary>位置イベント設定 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeCamera">
            <summary>
            VMEカメラ : 3点制御(上方向は原点中心の絶対方向指定なので注意)
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Position">
            <summary>カメラ位置 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Pos">
            <summary>カメラ位置(Position短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Target">
            <summary>カメラ注視点 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Tgt">
            <summary>カメラ注視点(Target短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Up">
            <summary>カメラの上方向位置(カメラ位置に関係なく原点中心での方向指定) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.FOV">
            <summary>FOV(パース角度) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCamera.Enable">
            <summary>カメラの有効状態(登録イベントがあればtrue) get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCamera.GetCameraPos">
            <summary>カメラ位置の取得(Pos.CS.T.PV短絡)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCamera.GetCameraTgt">
            <summary>カメラ注視点の取得(Tgt.CS.T.PV短絡)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCamera.GetCameraUp">
            <summary>カメラ上方向の取得(Up.CS.T.PV短絡)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCamera.GetViewMatrix">
            <summary>View行列取得(LookAtLH())</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeResult">
            <summary>
            VME実行後の結果データ管理用
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.StartFrame">
            <summary>開始フレーム get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.FrameCount">
            <summary>記録フレーム数 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.EnableBone">
            <summary>ボーン結果の有効状態 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.EnableMorph">
            <summary>モーフ結果の有効状態 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.EnableCamera">
            <summary>カメラ結果の有効状態 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.EnableLight">
            <summary>照明結果の有効状態 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.BoneCount">
            <summary>ボーン数 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeResult.MorphCount">
            <summary>モーフ数 get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetBoneNames">
            <summary>ボーン名の全取得(取得できない場合null)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetMorphNames">
            <summary>モーフ名の全取得(取得できない場合null)</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetBoneResult(System.Int32,System.Int32)">
            <summary>
            ボーン結果の取得 - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <param name="boneIndex">ボーンIndex</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.Bone(System.Int32,System.Int32)">
            <summary>
            ボーン結果の取得(GetBoneResult()短絡) - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <param name="boneIndex">ボーンIndex</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetMorphResult(System.Int32,System.Int32)">
            <summary>
            モーフ結果の取得 - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <param name="morphIndex">モーフ(表情)Index</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.Morph(System.Int32,System.Int32)">
            <summary>
            モーフ結果の取得(GetMorphResult()短絡) - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <param name="morphIndex">モーフ(表情)Index</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetCameraResult(System.Int32)">
            <summary>
            カメラ結果の取得 - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.Camera(System.Int32)">
            <summary>
            カメラ結果の取得(GetCameraResult()短絡) - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.GetLightResult(System.Int32)">
            <summary>
            照明結果の取得 - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.Light(System.Int32)">
            <summary>
            照明結果の取得(GetLightResult()短絡) - 取得できない場合null
            </summary>
            <param name="frame">フレーム</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.ToMotionVmd(System.Boolean)">
            <summary>ボーン／モーフ出力結果をVMDへ変換</summary>
            <param name="preSkip">不要フレーム(開始～)のスキップ</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.ToCameraVmd(System.Boolean,System.Boolean)">
            <summary>
            カメラ出力結果をVMDへ変換
            </summary>
            <param name="preSkip">不要フレーム(開始～)のスキップ</param>
            <param name="margin">true:1F間隔で配置(MMD側のシーンチェンジ対策)</param>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.ToLightVmd(System.Boolean)">
            <summary>
            照明出力結果をVMDへ変換
            </summary>
            <param name="preSkip"></param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeResult.Preview(PEPlugin.Pmd.IPEPmd,PEPlugin.Vme.PEVmePreviewOption)">
            <summary>
            VmdViewでプレビュー
            </summary>
            <param name="pmd">再生用PMD</param>
            <param name="option">プレビューオプション</param>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeBoneResult">
            <summary>
            ボーン演算結果(単位フレーム)
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.T">
            <summary>移動量(Translation短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.Translation">
            <summary>移動量 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.R">
            <summary>回転量(Rotation短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.Rotation">
            <summary>回転量 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.S">
            <summary>スケール(Scale短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeBoneResult.Scale">
            <summary>スケール get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeBoneResult.Clear">
            <summary>初期化</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeMorphResult">
            <summary>
            モーフ演算結果(単位フレーム)
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeMorphResult.V">
            <summary>モーフ量(Value短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeMorphResult.Value">
            <summary>モーフ量 get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeMorphResult.Clear">
            <summary>初期化</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeCameraResult">
            <summary>
            カメラ演算結果(単位フレーム)
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.Position">
            <summary>カメラ位置 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.Pos">
            <summary>カメラ位置(Position短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.Target">
            <summary>カメラ注視点 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.Tgt">
            <summary>カメラ注視点(Target短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.Up">
            <summary>上方向ベクトル get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeCameraResult.FOV">
            <summary>FOV(パース角度) get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeCameraResult.Clear">
            <summary>初期化</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeLightResult">
            <summary>
            照明演算結果(単位フレーム)
            </summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightResult.C">
            <summary>色(Color短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightResult.Color">
            <summary>色 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightResult.D">
            <summary>方向(Direction短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightResult.Direction">
            <summary>方向 get</summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeLightResult.Clear">
            <summary>初期化</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeLightState">
            <summary>照明の状態変数</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightState.C">
            <summary>色(Color短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightState.Color">
            <summary>色 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightState.D">
            <summary>方向(Direction短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLightState.Direction">
            <summary>方向 get</summary>
        </member>
        <member name="T:PEPlugin.Vme.IPEVmeLight">
            <summary>
            VME照明
            </summary>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeLight.ToLightState(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態から状態変数を取得 - 取得できない場合はnull
            </summary>
            <param name="state">状態変数</param>
            <returns></returns>
        </member>
        <member name="M:PEPlugin.Vme.IPEVmeLight.ToLS(PEPlugin.Vme.IPEVmeEventState)">
            <summary>
            イベント状態から状態変数を取得(ToLightState短絡) - 取得できない場合はnull
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLight.LS">
            <summary>現在の照明状態(短絡)(state as IPEVmeLightState) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLight.C">
            <summary>色ト設定(Color短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLight.Color">
            <summary>色設定 get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLight.D">
            <summary>方向設定(Direction短絡) get</summary>
        </member>
        <member name="P:PEPlugin.Vme.IPEVmeLight.Direction">
            <summary>方向設定 get</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXPmd">
            <summary>
            プラグイン用拡張(eXtend)PMDインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Header">
            <summary>ヘッダ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Vertex">
            <summary>拡張頂点リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Material">
            <summary>拡張材質リスト(各材質内に対応した面リストを格納) get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Bone">
            <summary>拡張ボーンリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.IK">
            <summary>拡張IKリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Expression">
            <summary>拡張表情リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.FrameExpression">
            <summary>拡張表情枠リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.FrameBone">
            <summary>拡張ボーン枠リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.ToonName">
            <summary>Toon名 get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Body">
            <summary>拡張剛体リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Joint">
            <summary>拡張Jointリスト get</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPmd.ConvertToBasePmd">
            <summary>基底PMDオブジェクトへ変換</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPmd.ToPmd">
            <summary>基底PMDオブジェクトへ変換 (ConvertToBasePmd短絡)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPmd.ConvertFromBasePmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            基底PMDオブジェクトから変換
            </summary>
            <param name="pe">PMDオブジェクト</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPmd.FromPmd(PEPlugin.Pmd.IPEPmd)">
            <summary>
            基底PMDオブジェクトから変換 (ConvertFromBasePmd短絡)
            </summary>
            <param name="pe">PMDオブジェクト</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPmd.Normalize">
            <summary>
            正規化 - 未参照のオブジェクト関係を初期化します(Update時は内部で自動的に正規化します)
            
            正規化手順
            1.参照先頂点が存在しない場合 -> 面:削除 表情:頂点オフセット削除
            2.参照先ボーンが存在しない場合 -> 頂点:0番固定 ボーン親:-1 ボーン子:0 ボーンIK親:0 IK_IK:IK削除 IK_Target:IK削除 IK_Link:Link削除 ボーン枠:削除 剛体:空
            3.参照先表情が存在しない場合 -> 表情枠:削除
            4.参照先剛体が存在しない場合 -> Joint:0番剛体
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXPmd.Primitive">
            <summary>プリミティブ作成</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXVertex">
            <summary>
            拡張頂点インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.Position">
            <summary>座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.Normal">
            <summary>法線 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.TextureUV">
            <summary>テクスチャUV座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.Bone1">
            <summary>ウェイト関連ボーン1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.Bone2">
            <summary>ウェイト関連ボーン2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.Weight">
            <summary>ブレンドウェイト (0 ～ 100) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXVertex.NonEdgeFlag">
            <summary>非エッジフラグ true:強制的にエッジを無効化 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXFace">
            <summary>
            拡張面インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFace.Vertex1">
            <summary>頂点1</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFace.Vertex2">
            <summary>頂点2</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFace.Vertex3">
            <summary>頂点3</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXMaterial">
            <summary>
            拡張材質インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Name">
            <summary>材質名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Diffuse">
            <summary>Diffuse色 | アルファ有効 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Specular">
            <summary>Specular色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Ambient">
            <summary>Ambient色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Shininess">
            <summary>反射係数 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Toon">
            <summary>ToonBmpNo | -1:toon0.bmp 0:toon01.bmp 1:toon02.bmp 2:toon03.bmp ～ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Edge">
            <summary>エッジフラグ(影も共用) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.TextureFileName">
            <summary>テクスチャファイル名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.SphereFileName">
            <summary>スフィアテクスチャファイル名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXMaterial.Faces">
            <summary>材質に対応した面リスト</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXBone">
            <summary>
            拡張ボーンインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.Name">
            <summary>ボーン名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.NameE">
            <summary>ボーン名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.Parent">
            <summary>親ボーン(親なし:null) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.To">
            <summary>子ボーン(接続先表示のみ) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.Kind">
            <summary>ボーン種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.IKParent">
            <summary>IK親ボーン(IK影響下／IK接続先のみ) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.RotationRatio">
            <summary>回転割合(回転連動ボーンのみ機能 %単位)</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBone.Position">
            <summary>ボーン座標 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXIK">
            <summary>
            拡張IKインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXIK.IK">
            <summary>IKボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXIK.Target">
            <summary>接続先ボーン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXIK.LoopCount">
            <summary>IK処理回数 : IK値1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXIK.LimitOnce">
            <summary>IK処理での単位角 : IK値2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXIK.Links">
            <summary>リンクリスト get</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXExpression">
            <summary>
            拡張表情インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpression.Name">
            <summary>表情名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpression.NameE">
            <summary>表情名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpression.Category">
            <summary>カテゴリ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpression.Offsets">
            <summary>位置オフセット get</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXExpressionOffset">
            <summary>表情オフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpressionOffset.Vertex">
            <summary>対象の頂点 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXExpressionOffset.Offset">
            <summary>座標オフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXFrameBone">
            <summary>
            拡張ボーン枠インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFrameBone.Name">
            <summary>フレームカテゴリ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFrameBone.NameE">
            <summary>フレームカテゴリ名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXFrameBone.Bones">
            <summary>フレーム内のボーンIndex get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXBody">
            <summary>
            拡張剛体インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Name">
            <summary>剛体名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Mode">
            <summary>剛体モード get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Bone">
            <summary>ボーン null:関連なし get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Group">
            <summary>グループNo 0~15 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.PassGroup">
            <summary>非衝突グループ | 通常使用用 get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.BoxKind">
            <summary>形状種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.BoxSize">
            <summary>
            Boxサイズ get/set
            X -> サイズ1 | Sphere:半径 / Box幅(中心位置からの片側距離) / Capsule:半径
            Y -> サイズ2 | Sphere:null / Box高さ(中心位置からの片側距離) / Capsule:高さ(上下半球を除いた長さ,0以下は×,0指定の場合は0.1)
            Z -> サイズ3 | Sphere:null / Box奥行き(中心位置からの片側距離) / Capsule:nul
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Rotation">
            <summary>回転 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Mass">
            <summary>質量 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.PositionDamping">
            <summary>移動減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.RotationDamping">
            <summary>回転減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Restitution">
            <summary>反発力 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXBody.Friction">
            <summary>摩擦力 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXJoint">
            <summary>
            拡張Jointインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Name">
            <summary>Joint名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.BodyA">
            <summary>接続剛体1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.BodyB">
            <summary>接続剛体2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Rotation">
            <summary>回転 | 角度はラジアン単位 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Limit_MoveLow">
            <summary>移動下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Limit_MoveHigh">
            <summary>移動上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Limit_AngleLow">
            <summary>回転下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.Limit_AngleHigh">
            <summary>回転上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.SpringConst_Move">
            <summary>バネ定数-移動 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEXJoint.SpringConst_Rotate">
            <summary>バネ定数-回転 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEXPrimitiveBuilder">
            <summary>
            拡張PMDプリミティブ作成
            </summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddPlane(System.Int32,PEPlugin.Pmd.IPEVector3,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean,PEPlugin.Pmd.IPEXBone)">
            <summary>
            平面の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="uc">u分解数</param>
            <param name="vc">v分解数</param>
            <param name="dir">面方向 0:XY 1:XZ 2:YZ</param>
            <param name="uv">UV設定</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddBox(System.Int32,PEPlugin.Pmd.IPEVector3,System.Single,System.Single,System.Single,PEPlugin.Pmd.IPEXBone)">
            <summary>
            箱の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="depth">奥行</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddSphere(System.Int32,PEPlugin.Pmd.IPEVector3,System.Single,System.Int32,System.Int32,PEPlugin.Pmd.IPEXBone)">
            <summary>
            球の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r">半径</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddCylinder(System.Int32,PEPlugin.Pmd.IPEVector3,System.Single,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmd.IPEXBone)">
            <summary>
            柱の追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">半径上</param>
            <param name="r2">半径下</param>
            <param name="length">高</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddTorus(System.Int32,PEPlugin.Pmd.IPEVector3,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmd.IPEXBone)">
            <summary>
            トーラスの追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">内径</param>
            <param name="r2">外経</param>
            <param name="sides">分割数(外枠)</param>
            <param name="rings">分割数(内輪)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEXPrimitiveBuilder.AddText(System.Int32,PEPlugin.Pmd.IPEVector3,System.Drawing.Font,System.String,System.Single,System.Single,PEPlugin.Pmd.IPEXBone)">
            <summary>
            テキストの追加
            </summary>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="font">フォント(フォント名／サイズのみ有効)</param>
            <param name="text">テキスト</param>
            <param name="d">偏差</param>
            <param name="ex">厚み</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="T:PEPlugin.Pmd.IPEVector4">
            <summary>
            4Dベクトルインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.X">
            <summary>X</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.Y">
            <summary>Y</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.Z">
            <summary>Z</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.W">
            <summary>W</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.R">
            <summary>R:Xと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.G">
            <summary>G:Yと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.B">
            <summary>B:Zと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector4.A">
            <summary>A:Wと共用</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEVector3">
            <summary>
            3Dベクトルインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.X">
            <summary>X</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.Y">
            <summary>Y</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.Z">
            <summary>Z</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.R">
            <summary>R:Xと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.G">
            <summary>G:Yと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector3.B">
            <summary>B:Zと共用</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEVector2">
            <summary>
            2Dベクトルインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector2.X">
            <summary>X</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector2.Y">
            <summary>Y</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector2.U">
            <summary>U:Xと共用</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVector2.V">
            <summary>V:Yと共用</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEMatrix">
            <summary>
            行列インターフェイス(演算は一般的な行列クラスへ複製して行うこと)
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M11">
            <summary>1行1列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M12">
            <summary>1行2列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M13">
            <summary>1行3列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M14">
            <summary>1行4列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M21">
            <summary>2行1列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M22">
            <summary>2行2列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M23">
            <summary>2行3列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M24">
            <summary>2行4列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M31">
            <summary>3行1列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M32">
            <summary>3行2列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M33">
            <summary>3行3列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M34">
            <summary>3行4列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M41">
            <summary>4行1列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M42">
            <summary>4行2列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M43">
            <summary>4行3列要素</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMatrix.M44">
            <summary>4行4列要素</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEMatrix.SetZero">
            <summary>行列値を0設定</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEMatrix.SetIdentity">
            <summary>単位行列化</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEMatrix.Multiply(PEPlugin.Pmd.IPEMatrix)">
            <summary>
            行列積算
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEMatrix.Multiply(PEPlugin.Pmd.IPEMatrix,PEPlugin.Pmd.IPEMatrix)">
            <summary>
            行列積算
            </summary>
            <param name="ml"></param>
            <param name="mr"></param>
            <returns></returns>
        </member>
        <member name="T:PEPlugin.Pmd.IPEQuaternion">
            <summary>
            クォータニオンインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEQuaternion.X">
            <summary>X</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEQuaternion.Y">
            <summary>Y</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEQuaternion.Z">
            <summary>Z</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEQuaternion.W">
            <summary>W</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEPmd">
            <summary>
            プラグイン用PMDインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Header">
            <summary>ヘッダ set/get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Vertex">
            <summary>頂点リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Face">
            <summary>面頂点リスト(頂点Index3点で三角面を構成) get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Material">
            <summary>材質リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Bone">
            <summary>ボーンリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.IK">
            <summary>IKリスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Expression">
            <summary>表情リスト</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.FrameExpression">
            <summary>表情枠リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.FrameBone">
            <summary>ボーン枠リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.ToonName">
            <summary>Toon名 get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Body">
            <summary>剛体リスト get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.Joint">
            <summary>Jointリスト get</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.Clear">
            <summary>初期化</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.InitializeNormalPmd">
            <summary>通常PMD状態で初期化:+センターボーン,ToonName初期化</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmd.FilePath">
            <summary>PMDファイルパス(FromFile()で読み込む場合自動設定:各プレビュー処理に使用)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.FromFile(System.String)">
            <summary>ファイルから読み込み</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.ToFile(System.String)">
            <summary>ファイルへ保存</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.FromFileEx(System.String)">
            <summary>EX(PMX1.0)形式でファイルから読み込み(互換用)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.ToFileEx(System.String)">
            <summary>EX(PMX1.0)形式でファイルへ保存(互換用／動作しません)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.FromStreamEx(System.IO.Stream)">
            <summary>EX(PMX1.0)形式でストリームから読み込み(互換用)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmd.ToStreamEx(System.IO.Stream)">
            <summary>EX(PMX1.0)形式でストリームへ保存(互換用／動作しません)</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEHeader">
            <summary>
            PMDヘッダインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.Version">
            <summary>PMDバージョン get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.ModelName">
            <summary>モデル名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.ModelNameE">
            <summary>モデル名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.Comment">
            <summary>コメント get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.CommentE">
            <summary>コメント(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEHeader.EnglishName">
            <summary>英名対応 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEVertex">
            <summary>
            頂点インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.Position">
            <summary>座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.Normal">
            <summary>法線 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.TextureUV">
            <summary>テクスチャUV座標 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.Bone1">
            <summary>ウェイト関連ボーン1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.Bone2">
            <summary>ウェイト関連ボーン2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.Weight">
            <summary>ブレンドウェイト (0 ～ 100) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEVertex.NonEdgeFlag">
            <summary>非エッジフラグ true:強制的にエッジを無効化 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEMaterial">
            <summary>
            材質インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Name">
            <summary>材質名(内部的にPMDデータとは別管理なので注意) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Diffuse">
            <summary>Diffuse色 | アルファ有効 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Specular">
            <summary>Specular色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Ambient">
            <summary>Ambient色 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Shininess">
            <summary>反射係数 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Toon">
            <summary>ToonBmpNo | -1:toon0.bmp 0:toon01.bmp 1:toon02.bmp 2:toon03.bmp ～ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.Edge">
            <summary>エッジフラグ(影も共用) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.FaceVertexCount">
            <summary>面頂点数 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.TextureFileName">
            <summary>テクスチャファイル名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEMaterial.SphereFileName">
            <summary>スフィアテクスチャファイル名 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.BoneKind">
            <summary>
            ボーン種類
            </summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.Rotate">
            <summary>回転のみ</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.RotateMove">
            <summary>回転と移動</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.IK">
            <summary>IK</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.Unknown">
            <summary>不明(選択不可？)</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.IKLink">
            <summary>IK影響下</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.RotateEffect">
            <summary>回転影響下</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.IKTo">
            <summary>IK接続先</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.Unvisible">
            <summary>非表示</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.Twist">
            <summary>捩り</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BoneKind.RotateRatio">
            <summary>回転連動</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEBone">
            <summary>
            ボーンインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.Name">
            <summary>ボーン名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.NameE">
            <summary>ボーン名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.Parent">
            <summary>親ボーンIndex(親なし:-1) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.To">
            <summary>子ボーンIndex(接続先表示のみ) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.Kind">
            <summary>ボーン種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.IKParent">
            <summary>IK親ボーン(IK影響下／IK接続先のみ) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBone.Position">
            <summary>ボーン座標 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEIK">
            <summary>
            IKインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEIK.IK">
            <summary>IKボーンIndex get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEIK.Target">
            <summary>接続先ボーンIndex get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEIK.LoopCount">
            <summary>IK処理回数 : IK値1 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEIK.LimitOnce">
            <summary>IK処理での単位角 : IK値2 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEIK.Links">
            <summary>リンクリスト get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.ExpressionCategory">
            <summary>
            表情カテゴリ
            </summary>
        </member>
        <member name="F:PEPlugin.Pmd.ExpressionCategory.Nothing">
            <summary>無効</summary>
        </member>
        <member name="F:PEPlugin.Pmd.ExpressionCategory.Eyebrow">
            <summary>眉</summary>
        </member>
        <member name="F:PEPlugin.Pmd.ExpressionCategory.Eye">
            <summary>目</summary>
        </member>
        <member name="F:PEPlugin.Pmd.ExpressionCategory.Rip">
            <summary>口</summary>
        </member>
        <member name="F:PEPlugin.Pmd.ExpressionCategory.Others">
            <summary>その他</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEExpression">
            <summary>
            表情インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpression.Name">
            <summary>表情名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpression.NameE">
            <summary>表情名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpression.Category">
            <summary>カテゴリ get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpression.Offsets">
            <summary>位置オフセット get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpression.Enable">
            <summary>有効状態(PMXモーフ対応:頂点モーフのみtrue) get</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEExpressionOffset">
            <summary>表情オフセットインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpressionOffset.Index">
            <summary>対象の頂点Index get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEExpressionOffset.Offset">
            <summary>座標オフセット get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEFrameBone">
            <summary>
            ボーン枠インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEFrameBone.Name">
            <summary>フレームカテゴリ名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEFrameBone.NameE">
            <summary>フレームカテゴリ名(英) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEFrameBone.Bones">
            <summary>フレーム内のボーンIndex(PMXモーフ対応:モーフIndexは0→-1として負数増加(0:-1,1:-2,2:-3...) get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.BodyBoxKind">
            <summary>
            剛体の形状種類
            </summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyBoxKind.Sphere">
            <summary>球</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyBoxKind.Box">
            <summary>Box</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyBoxKind.Capsule">
            <summary>カプセル</summary>
        </member>
        <member name="T:PEPlugin.Pmd.BodyMode">
            <summary>
            剛体の動作モード
            </summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyMode.Static">
            <summary>ボーン追従</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyMode.Dynamic">
            <summary>物理演算</summary>
        </member>
        <member name="F:PEPlugin.Pmd.BodyMode.DynamicWithBone">
            <summary>物理演算 + Bone位置合わせ</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEBody">
            <summary>
            剛体インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Name">
            <summary>剛体名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Mode">
            <summary>剛体モード get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Bone">
            <summary>ボーンIndex -1:関連なし get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Group">
            <summary>グループNo 0~15 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.PassGroup">
            <summary>非衝突グループ | 通常使用用 get</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.BoxKind">
            <summary>形状種類 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.BoxSize">
            <summary>
            Boxサイズ get/set
            X -> サイズ1 | Sphere:半径 / Box幅(中心位置からの片側距離) / Capsule:半径
            Y -> サイズ2 | Sphere:null / Box高さ(中心位置からの片側距離) / Capsule:高さ(上下半球を除いた長さ,0以下は×,0指定の場合は0.1)
            Z -> サイズ3 | Sphere:null / Box奥行き(中心位置からの片側距離) / Capsule:nul
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Rotation">
            <summary>回転 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Mass">
            <summary>質量 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.PositionDamping">
            <summary>移動減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.RotationDamping">
            <summary>回転減衰 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Restitution">
            <summary>反発力 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEBody.Friction">
            <summary>摩擦力 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEJoint">
            <summary>
            Jointインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Name">
            <summary>Joint名 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.BodyA">
            <summary>接続剛体1(Index) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.BodyB">
            <summary>接続剛体2(Index) get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Position">
            <summary>位置 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Rotation">
            <summary>回転 | 角度はラジアン単位 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Limit_MoveLow">
            <summary>移動下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Limit_MoveHigh">
            <summary>移動上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Limit_AngleLow">
            <summary>回転下限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.Limit_AngleHigh">
            <summary>回転上限 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.SpringConst_Move">
            <summary>バネ定数-移動 get/set</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEJoint.SpringConst_Rotate">
            <summary>バネ定数-回転 get/set</summary>
        </member>
        <member name="T:PEPlugin.Pmd.IPEPmdConnector">
            <summary>
            プラグインPMD操作インターフェイス
            </summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.GetCurrentState">
            <summary>現在のPMDデータの状態複製を取得(直接参照ではないので注意)</summary>
        </member>
        <member name="P:PEPlugin.Pmd.IPEPmdConnector.CurrentPath">
            <summary>現在オープン中のPMDファイルのパス get/set</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.Update(PEPlugin.Pmd.IPEPmd)">
            <summary>
            ホスト側のPMDデータを更新
            </summary>
            <param name="pe">更新用プラグインPMD</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.Update(PEPlugin.Pmd.IPEPmd,PEPlugin.Pmd.UpdateObject,System.Int32)">
            <summary>
            ホスト側のPMDデータを個別更新(負数指定の場合はリスト全て)
            </summary>
            <param name="pe">更新用プラグインPMD</param>
            <param name="obj">更新対象</param>
            <param name="index">対象Index(負数の場合はリスト全て)</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.Update(PEPlugin.Pmd.IPEPmd,PEPlugin.Pmd.UpdateObject,System.Int32[])">
            <summary>
            ホスト側のPMDデータを任意数更新
            </summary>
            <param name="pe">更新用プラグインPMD</param>
            <param name="obj">更新対象</param>
            <param name="indices">任意の対象Index</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.GetCurrentStateEx">
            <summary>拡張PMDで現在のPMDデータの状態複製を取得(直接参照ではないので注意)</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.UpdateEx(PEPlugin.Pmd.IPEXPmd)">
            <summary>
            ホスト側のPMDデータを拡張PMDで更新
            </summary>
            <param name="pex">更新用拡張プラグインPMD</param>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.LockUndo">
            <summary>更新時にUndo登録処理を行わないようにロック</summary>
        </member>
        <member name="M:PEPlugin.Pmd.IPEPmdConnector.UnlockUndo">
            <summary>Undo処理のロックを解除</summary>
        </member>
        <member name="T:PEPlugin.Pmd.UpdateObject">
            <summary>
            更新対象
            </summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.None">
            <summary>無効</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.All">
            <summary>全項目</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Header">
            <summary>ヘッダ</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Vertex">
            <summary>頂点</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Face">
            <summary>面頂点</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Material">
            <summary>材質</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Bone">
            <summary>ボーン</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.IK">
            <summary>IK</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Expression">
            <summary>表情(PMD互換:モーフ)</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.FrameExpression">
            <summary>表情枠(PMD互換:表示枠-表情)</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.FrameBone">
            <summary>表示枠</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.ToonName">
            <summary>Toon名</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Body">
            <summary>剛体</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Joint">
            <summary>Joint</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Morph">
            <summary>PMXモーフ</summary>
        </member>
        <member name="F:PEPlugin.Pmd.UpdateObject.Node">
            <summary>PMX表示枠</summary>
        </member>
        <member name="T:PEPlugin.IPEPlugin">
            <summary>
            PEプラグイン用インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.IPEPlugin.Name">
            <summary>プラグイン名</summary>
        </member>
        <member name="P:PEPlugin.IPEPlugin.Version">
            <summary>バージョン情報</summary>
        </member>
        <member name="P:PEPlugin.IPEPlugin.Description">
            <summary>説明</summary>
        </member>
        <member name="P:PEPlugin.IPEPlugin.Option">
            <summary>起動オプション</summary>
        </member>
        <member name="M:PEPlugin.IPEPlugin.Run(PEPlugin.IPERunArgs)">
            <summary>
            エントリポイント
            </summary>
            <param name="args">実行パラメータ</param>
        </member>
        <member name="T:PEPlugin.IPERunArgs">
            <summary>
            実行パラメータ
            </summary>
        </member>
        <member name="P:PEPlugin.IPERunArgs.IsBootup">
            <summary>true:Bootup起動 / false:メニュー起動</summary>
        </member>
        <member name="P:PEPlugin.IPERunArgs.ModulePath">
            <summary>プラグインDLLパス</summary>
        </member>
        <member name="P:PEPlugin.IPERunArgs.Host">
            <summary>ホストインターフェイス</summary>
        </member>
        <member name="T:PEPlugin.IPEPluginOption">
            <summary>
            PEプラグインオプション用インターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.IPEPluginOption.Bootup">
            <summary>起動時実行</summary>
        </member>
        <member name="P:PEPlugin.IPEPluginOption.RegisterMenu">
            <summary>プラグインメニューへの登録</summary>
        </member>
        <member name="P:PEPlugin.IPEPluginOption.RegisterMenuText">
            <summary>プラグインメニューへの登録テキスト(空の場合はプラグイン名を使用)</summary>
        </member>
        <member name="T:PEPlugin.PEPluginOption">
            <summary>
            PEプラグインオプション
            </summary>
        </member>
        <member name="M:PEPlugin.PEPluginOption.#ctor(System.Boolean,System.Boolean,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="bootup">起動時実行フラグ</param>
            <param name="regMenu">プラグインメニューへの登録</param>
            <param name="regMenuText">登録メニューテキスト(空の場合はプラグイン名)</param>
        </member>
        <member name="P:PEPlugin.PEPluginOption.Bootup">
            <summary>起動時実行フラグ</summary>
        </member>
        <member name="P:PEPlugin.PEPluginOption.RegisterMenu">
            <summary>メニュー登録の可否</summary>
        </member>
        <member name="P:PEPlugin.PEPluginOption.RegisterMenuText">
            <summary>登録メニュー名称</summary>
        </member>
        <member name="T:PEPlugin.PEPluginClass">
            <summary>
            プラグイン用基底クラス
            </summary>
        </member>
        <member name="M:PEPlugin.PEPluginClass.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:PEPlugin.PEPluginClass.Name">
            <summary>プラグイン名</summary>
        </member>
        <member name="P:PEPlugin.PEPluginClass.Version">
            <summary>バージョン情報</summary>
        </member>
        <member name="P:PEPlugin.PEPluginClass.Description">
            <summary>説明</summary>
        </member>
        <member name="P:PEPlugin.PEPluginClass.Option">
            <summary>オプション</summary>
        </member>
        <member name="M:PEPlugin.PEPluginClass.Run(PEPlugin.IPERunArgs)">
            <summary>エントリポイント</summary>
            <param name="args">実行パラメータ</param>
        </member>
        <member name="M:PEPlugin.PEPluginClass.Dispose">
            <summary>Dispose処理</summary>
        </member>
        <member name="T:PEPlugin.IPEImportPlugin">
            <summary>インポートプラグインインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.IPEImportPlugin.Ext">
            <summary>ファイル拡張子(".***")</summary>
        </member>
        <member name="P:PEPlugin.IPEImportPlugin.Caption">
            <summary>ファイル説明</summary>
        </member>
        <member name="M:PEPlugin.IPEImportPlugin.Import(System.String,PEPlugin.IPERunArgs)">
            <summary>
            インポート(PMXへ変換)
            </summary>
            <param name="path">ファイルパス</param>
            <param name="args">実行パラメータ</param>
            <returns>失敗時はnull</returns>
        </member>
        <member name="T:PEPlugin.IPEExportPlugin">
            <summary>エクスポートプラグインインターフェイス</summary>
        </member>
        <member name="P:PEPlugin.IPEExportPlugin.Ext">
            <summary>ファイル拡張子(".***")</summary>
        </member>
        <member name="P:PEPlugin.IPEExportPlugin.Caption">
            <summary>ファイル説明</summary>
        </member>
        <member name="M:PEPlugin.IPEExportPlugin.Export(PEPlugin.Pmx.IPXPmx,System.String,PEPlugin.IPERunArgs)">
            <summary>
            エクスポート(PMXから保存)
            </summary>
            <param name="pmx">PMX</param>
            <param name="path">ファイルパス</param>
            <param name="args">実行パラメータ</param>
        </member>
        <member name="T:PEPlugin.PECheckResult">
            <summary>状態検証結果</summary>
        </member>
        <member name="P:PEPlugin.PECheckResult.Text">
            <summary>検証結果テキスト(検証窓にそのまま表示されます)</summary>
        </member>
        <member name="P:PEPlugin.PECheckResult.Filter">
            <summary>検証窓でのフィルタリング値 | 0:○ 1:△ 2:× に相当</summary>
        </member>
        <member name="T:PEPlugin.IPECheckerPlugin">
            <summary>状態検証追加プラグイン</summary>
        </member>
        <member name="M:PEPlugin.IPECheckerPlugin.CheckPmx(PEPlugin.Pmx.IPXPmx)">
            <summary>
            状態検証時に呼び出される検証処理 | 同時に複数検証可
            </summary>
            <param name="pmx">PMX</param>
        </member>
        <member name="T:PEPlugin.IPEPluginHost">
            <summary>
            ホスト用プラグインインターフェイス
            </summary>
        </member>
        <member name="P:PEPlugin.IPEPluginHost.Name">
            <summary>ホスト名 get</summary>
        </member>
        <member name="P:PEPlugin.IPEPluginHost.Version">
            <summary>ホストバージョン get</summary>
        </member>
        <member name="P:PEPlugin.IPEPluginHost.Builder">
            <summary>データビルダ get</summary>
        </member>
        <member name="P:PEPlugin.IPEPluginHost.Connector">
            <summary>操作コネクタ get</summary>
        </member>
        <member name="M:PXCPlugin.Pmx.PXCPmx.InitializeSystemNode">
            <summary>表示枠を初期設定(システム予約)</summary>
        </member>
        <member name="M:PXCPlugin.Pmx.PXCBody.FromFlagBits(System.UInt16)">
            <summary>フラグビット列から変換</summary>
        </member>
        <member name="M:PXCPlugin.Pmx.PXCBody.ToFlagBits(System.Boolean[])">
            <summary>フラグビット列へ変換</summary>
        </member>
        <member name="P:PXCPlugin.PXCBridge.Builder">
            <summary>PMXビルダ</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.BuilderInitialize(PXCPlugin.IPXCPluginConnector)">
            <summary>ビルダの初期化</summary>
        </member>
        <member name="P:PXCPlugin.PXCBridge.PrimitiveBuilder">
            <summary>プリミティブ作成</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.PrimitiveBuilderInitialize(PXCPlugin.IPXCPluginConnector)">
            <summary>プリミティブ作成の初期化</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.GetCurrentPmx(PXCPlugin.IPXCPluginConnector)">
            <summary>現在のPMXデータの状態複製を取得</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.UpdatePmx(PXCPlugin.IPXCPluginConnector,PEPlugin.Pmx.IPXPmx,System.Boolean)">
            <summary>
            ホスト側のPMXデータを更新(各UI側も更新)
            </summary>
            <param name="c"></param>
            <param name="pmx"></param>
            <param name="lockUndo">true:更新時にUndo登録処理を行わない</param>
        </member>
        <member name="M:PXCPlugin.PXCBridge.GetViewAxis(PXCPlugin.IPXCPluginConnector)">
            <summary>PmxViewスクリーン軸取得(X/Y/Z)</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.ViewCtrl(PXCPlugin.IPXCPluginConnector)">
            <summary>View制御(IPXViewControl)取得 | 初回呼び出し時に初期化(以降は引数不要)</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.SystemCtrl(PXCPlugin.IPXCPluginConnector)">
            <summary>System制御(IPXSystemControl)取得 | 初回呼び出し時に初期化(以降は引数不要)</summary>
        </member>
        <member name="M:PXCPlugin.PXCBridge.RegisterUIModel(PXCPlugin.IPXCPluginConnector,PEPlugin.Pmx.IPXPmx,System.String,PEPlugin.SDX.M,System.Boolean,System.Boolean)">
            <summary>
            UIモデルの登録
             ※ IPXUIModel.Release()を呼び出さずにプラグインを終了した場合(及び自動破棄未設定時)、
             登録したUIモデルは破棄されずシステム上に残り続けます(仕様)
            </summary>
            <param name="c">接続インターフェイス</param>
            <param name="pmx">PMX</param>
            <param name="name">登録名称</param>
            <param name="m">初期ワールド行列</param>
            <param name="visible">表示状態</param>
            <param name="transform">true:変形可 false:変形不可</param>
            <returns>UIモデル操作インターフェイス</returns>
        </member>
        <member name="M:PXCPlugin.PXCBridge.CreateEventConnector(PXCPlugin.IPXCPluginConnector)">
            <summary>
            イベントコネクタの作成
            </summary>
            <param name="c">Cプラグインコネクタ</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.PXCBridge.ReleaseEventConnector(PXCPlugin.Event.IPXEventConnector)">
            <summary>
            イベントコネクタ破棄
            </summary>
            <param name="ev">イベントコネクタ</param>
        </member>
        <member name="T:PXCPlugin.IPXCPrimitiveBuilder">
            <summary>Cプラグイン用プリミティブ作成</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddPlane(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean,PEPlugin.Pmx.IPXBone)">
            <summary>
            平面の追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="uc">u分解数</param>
            <param name="vc">v分解数</param>
            <param name="dir">面方向 0:XY 1:XZ 2:YZ</param>
            <param name="uv">UV設定</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddBox(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Single,PEPlugin.Pmx.IPXBone)">
            <summary>
            箱の追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="width">幅</param>
            <param name="height">高</param>
            <param name="depth">奥行</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddSphere(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            球の追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r">半径</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddCylinder(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            柱の追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">半径上</param>
            <param name="r2">半径下</param>
            <param name="length">高</param>
            <param name="slices">分割数(経)</param>
            <param name="stacks">分割数(緯)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddTorus(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Single,System.Single,System.Int32,System.Int32,PEPlugin.Pmx.IPXBone)">
            <summary>
            トーラスの追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="r1">内径</param>
            <param name="r2">外経</param>
            <param name="sides">分割数(外枠)</param>
            <param name="rings">分割数(内輪)</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="M:PXCPlugin.IPXCPrimitiveBuilder.AddText(PEPlugin.Pmx.IPXPmx,System.Int32,PEPlugin.SDX.V3,System.Drawing.Font,System.String,System.Single,System.Single,PEPlugin.Pmx.IPXBone)">
            <summary>
            テキストの追加
            </summary>
            <param name="pmx">PMX</param>
            <param name="material">材質Index</param>
            <param name="pos">座標</param>
            <param name="font">フォント(フォント名／サイズのみ有効)</param>
            <param name="text">テキスト</param>
            <param name="d">偏差</param>
            <param name="ex">厚み</param>
            <param name="bone">ウェイト関連ボーン(null可)</param>
        </member>
        <member name="T:PXCPlugin.RegisterBase">
            <summary>Cプラグイン登録用基底クラス | PXCPlugin.Register へ派生させて利用すること</summary>
        </member>
        <member name="T:PXCPlugin.IPXConnector">
            <summary>基本接続インターフェイス</summary>
        </member>
        <member name="M:PXCPlugin.IPXConnector.Connect(System.Int32,System.Object)">
            <summary>接続処理</summary>
        </member>
        <member name="T:PXCPlugin.IPXCPluginRunArgs">
            <summary>実行パラメータ</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPluginRunArgs.ModulePath">
            <summary>プラグインDLLパス</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPluginRunArgs.Connector">
            <summary>接続インターフェイス</summary>
        </member>
        <member name="T:PXCPlugin.IPXCPluginConnector">
            <summary>Cプラグイン接続インターフェイス</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetSelectedVertexIndices">
            <summary>選択対象頂点の取得(Index)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.SetSelectedVertexIndices(System.Int32[])">
            <summary>
            選択対象頂点の設定(Index)
            </summary>
            <param name="indices">選択頂点Index</param>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetSelectedFaceIndices">
            <summary>選択対象面頂点の取得(Index)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.SetSelectedFaceIndices(System.Int32[])">
            <summary>
            選択対象面頂点の設定(Index)
            </summary>
            <param name="indices">選択面Index</param>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetSelectedBoneIndices">
            <summary>選択対象ボーンの取得(Index)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.SetSelectedBoneIndices(System.Int32[])">
            <summary>
            選択対象ボーンの設定(Index)
            </summary>
            <param name="indices">選択ボーンIndex</param>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetSelectedBodyIndices">
            <summary>選択対象剛体の取得(Index)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.SetSelectedBodyIndices(System.Int32[])">
            <summary>
            選択対象剛体の設定(Index)
            </summary>
            <param name="indices">選択剛体Index</param>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetSelectedJointIndices">
            <summary>選択対象Jointの取得(Index)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.SetSelectedJointIndices(System.Int32[])">
            <summary>
            選択対象Jointの設定(Index)
            </summary>
            <param name="indices">選択JointIndex</param>
        </member>
        <member name="M:PXCPlugin.IPXCPluginConnector.GetVisibleMaterialIndices">
            <summary>
            表示対象材質の取得(Index)
            </summary>
            <returns></returns>
        </member>
        <member name="T:PXCPlugin.IPXCPlugin">
            <summary>Cプラグインインターフェイス</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPlugin.Name">
            <summary>プラグイン名</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPlugin.Version">
            <summary>バージョン情報</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPlugin.Description">
            <summary>説明</summary>
        </member>
        <member name="P:PXCPlugin.IPXCPlugin.MenuText">
            <summary>プラグインメニューへの登録テキスト(空(null or "")の場合はプラグイン名)</summary>
        </member>
        <member name="M:PXCPlugin.IPXCPlugin.Run(PXCPlugin.IPXCPluginRunArgs)">
            <summary>
            エントリポイント
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:PXCPlugin.PXCPluginClass">
            <summary>Cプラグイン用基底クラス</summary>
        </member>
        <member name="P:PXCPlugin.PXCPluginClass.m_bld">
            <summary>ビルダショートカット</summary>
        </member>
        <member name="M:PXCPlugin.PXCPluginClass.Dispose">
            <summary>Dispose処理</summary>
        </member>
        <member name="T:PXCPlugin.IPXSystemControl">
            <summary>System制御</summary>
        </member>
        <member name="P:PXCPlugin.IPXSystemControl.PEPluginCount">
            <summary>登録されているPEプラグイン数</summary>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.FindPEPlugins(System.String,System.Boolean)">
            <summary>
            登録PEプラグインをメニューテキストから検索(プラグイン序数を取得／対象がない場合:null)
            </summary>
            <param name="menuText">登録テキスト | nullの場合は全対象</param>
            <param name="contains">true:一部でも含まれている対象を列挙 false:完全一致のみ</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetPEPluginInfo(System.Int32)">
            <summary>
            登録PEプラグインの情報取得
            </summary>
            <param name="n">プラグイン序数</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.RunPEPlugin(System.Int32)">
            <summary>
            登録PEプラグインの実行(メニューからの呼び出し処理と同様／起動時実行はできません)
            </summary>
            <param name="n">プラグイン序数</param>
        </member>
        <member name="P:PXCPlugin.IPXSystemControl.CPluginCount">
            <summary>登録されているCプラグイン数</summary>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.FindCPlugins(System.String,System.Boolean)">
            <summary>
            登録Cプラグインをメニューテキストから検索(プラグイン序数を取得／対象がない場合:null)
            </summary>
            <param name="menuText">登録テキスト | nullの場合は全対象</param>
            <param name="contains">true:一部でも含まれている対象を列挙 false:完全一致のみ</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetCPluginInfo(System.Int32)">
            <summary>
            登録Cプラグインの情報取得
            </summary>
            <param name="n">プラグイン序数</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetCPluginInfo(PXCPlugin.IPXCPlugin)">
            <summary>
            プラグイン情報取得
            </summary>
            <param name="plugin">Cプラグインインターフェイス</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.RunCPlugin(System.Int32)">
            <summary>
            登録Cプラグインの実行(メニューからの呼び出し処理と同様)
            </summary>
            <param name="n">プラグイン序数</param>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.SetShareData(System.String,System.Int32)">
            <summary>
            プラグイン共有データに追加登録(任意のプラグイン間でのデータの受け渡し用／キー登録済みの場合:false) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="data">値</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.SetShareData(System.String,System.String)">
            <summary>
            プラグイン共有データに追加登録(任意のプラグイン間でのデータの受け渡し用／キー登録済みの場合:false) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="data">文字列</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.SetShareData(System.String,System.Byte[])">
            <summary>
            プラグイン共有データに追加登録(任意のプラグイン間でのデータの受け渡し用／キー登録済みの場合:false) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="data">バイト列</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetShareValue(System.String,System.Boolean)">
            <summary>
            プラグイン共有データから値取得(キー対象がない場合またはPEプラグインでの登録形式と異なる場合:null) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="clear">true:取得後共有データから削除</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetShareText(System.String,System.Boolean)">
            <summary>
            プラグイン共有データから文字列取得(キー対象がない場合またはPEプラグインでの登録形式と異なる場合:null) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="clear">true:取得後共有データから削除</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.GetShareBuffer(System.String,System.Boolean)">
            <summary>
            プラグイン共有データからバッファ取得(キー対象がない場合またはPEプラグインでの登録形式と異なる場合:null) ※PEプラグインの共有オブジェクトとも共有関係
            </summary>
            <param name="key">任意のキー文字列</param>
            <param name="clear">true:取得後共有データから削除</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.IPXSystemControl.RemoveShareData(System.String)">
            <summary>
            プラグイン共有データから削除(キー対象がない場合:false) ※PEプラグインで登録した共有オブジェクトも対象になるので注意
            </summary>
            <param name="key">任意のキー文字列</param>
            <returns></returns>
        </member>
        <member name="T:PXCPlugin.PXPluginInfo">
            <summary>プラグイン情報</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.Name">
            <summary>プラグイン名称</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.MenuText">
            <summary>メニュー登録テキスト</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.Version">
            <summary>バージョン情報</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.Description">
            <summary>説明</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.AssemblyPath">
            <summary>アセンブリ(DLL)ファイルパス</summary>
        </member>
        <member name="P:PXCPlugin.PXPluginInfo.ClassName">
            <summary>クラス名称</summary>
        </member>
        <member name="T:PXCPlugin.UIModel.IPXUIModel">
            <summary>UIモデルインターフェイス</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.Release">
            <summary>破棄</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetAutoRelease(PXCPlugin.IPXCPlugin)">
            <summary>
            プラグイン終了時に破棄処理呼び出し設定 | ※手動で Release() を行う場合は設定しないでください(重要)
            </summary>
            <param name="plugin">Cプラグインインターフェイス</param>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.Name">
            <summary>登録名称</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.Visible">
            <summary>表示状態</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.DrawMode">
            <summary>描画モード | 0:通常 1:Wire 2:Wire+</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.Light">
            <summary>照明の有効状態 | 標準OFF</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.Depth">
            <summary>深度(Z)の有効状態 | 深度無効のUIモデルは描画順序が後方に配置されます</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.TopMost">
            <summary>最前面描画 | 描画順序が最後に配置され描画直前に深度(Z)バッファを初期化します</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.IPXUIModel.FixedDrawScale">
            <summary>カメラからの距離に関わらず一定の大きさで描画(パースOFFとは異なります)</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBillboard(System.Int32)">
            <summary>
            ビルボード設定
            </summary>
            <param name="type">0:無効 1:全軸 2:Y軸</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetWorld(PEPlugin.SDX.M)">
            <summary>
            ワールド行列の設定
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.GetWorld">
            <summary>
            ワールド行列の取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBone(System.Int32,PEPlugin.SDX.V3,PEPlugin.SDX.Q,PEPlugin.SDX.V3)">
            <summary>
            ボーン変形状態の設定 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
            <param name="bx">ボーンIndex</param>
            <param name="scale">スケール</param>
            <param name="rotate">回転(クォータニオン量)</param>
            <param name="translate">移動</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBoneScale(System.Int32,PEPlugin.SDX.V3)">
            <summary>
            ボーン変形状態(スケール)の設定 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
            <param name="bx">ボーンIndex</param>
            <param name="scale">スケール</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBoneRotate(System.Int32,PEPlugin.SDX.Q)">
            <summary>
            ボーン変形状態(回転)の設定 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
            <param name="bx">ボーンIndex</param>
            <param name="rotate">回転(クォータニオン量)</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBoneTranslate(System.Int32,PEPlugin.SDX.V3)">
            <summary>
            ボーン変形状態(移動)の設定 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
            <param name="bx">ボーンIndex</param>
            <param name="translate">移動</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.ResetBone">
            <summary>
            ボーン変形状態の全初期化 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetMorph(System.Int32,System.Single)">
            <summary>
            モーフ変形状態の設定 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
            <param name="mx">モーフIndex</param>
            <param name="val">変形量(0.0～1.0)</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.ResetMorph">
            <summary>
            モーフ変形状態の全初期化 | 変形可能として初期化していない場合は正常に動作しません
            </summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.UpdateTransform">
            <summary>
            変形状態の適用 | 変形可能として初期化していない場合は画面の再描画のみ行います
            </summary>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.GetTransformedVertexPosition(System.Int32)">
            <summary>
            変形済頂点位置の取得 | ワールド行列非適用値 ※画面上の頂点位置は ワールド行列 により変換(乗算)されます
            </summary>
            <param name="vx">頂点Index</param>
            <returns>失敗時null</returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.GetTransformedVertexNormal(System.Int32)">
            <summary>
            変形済頂点法線の取得 | ワールド行列非適用値 ※画面上の法線向きは ワールド行列 により変換(乗算)されます
            </summary>
            <param name="vx">頂点Index</param>
            <returns>失敗時null</returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.GetTransformedBonePosition(System.Int32)">
            <summary>
            変形済ボーン位置の取得 | ワールド行列非適用値 ※画面上のボーン位置は ワールド行列 により変換(乗算)されます
            </summary>
            <param name="bx">ボーンIndex</param>
            <returns>失敗時null</returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.GetTransformedBoneMatrix(System.Int32)">
            <summary>
            ボーン変換行列の取得 | ボーン変換行列は [頂点(初期位置) * ボーン変換行列 = 変形済み頂点位置] となる変換行列です(ウェイト100%頂点の場合)
            </summary>
            <param name="bx">ボーンIndex</param>
            <returns>失敗時null</returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.UpdateMaterialColor(System.Int32,System.Int32,PEPlugin.SDX.V4)">
            <summary>
            材質色の更新 | UIモデルの材質色を直接変更します(材質モーフは変更後の材質色を基準にして適用されます) ※再描画しません
            </summary>
            <param name="mx">材質Index</param>
            <param name="type">0:Diffuse, 1:Specular(w=Power), 2:Ambient(w:無視), 3:EdgeColor</param>
            <param name="col">色値</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.UpdateMaterialEdge(System.Int32,System.Boolean,System.Single)">
            <summary>
            材質エッジの更新 | 材質モーフは変更後の材質値を基準にして適用されます ※再描画しません
            </summary>
            <param name="mx">材質Index</param>
            <param name="edge">エッジの有効状態</param>
            <param name="size">エッジサイズ</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.UpdateMaterialFlags(System.Int32,System.Int32,System.Boolean)">
            <summary>
            材質フラグの更新 | ※再描画しません
            </summary>
            <param name="mx">材質Index</param>
            <param name="type">0:両面描画</param>
            <param name="flag">フラグ値</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.SetBitmapTexture(System.Int32,System.Drawing.Bitmap,System.Int32)">
            <summary>
            Bitmapデータでの材質テクスチャ設定
            </summary>
            <param name="mx">材質Index</param>
            <param name="bmp">Bitmap:32bitARGBのみ</param>
            <param name="mipmap">ミップマップ(0:作成可能最大数/1:ミップマップなし/2~:指定数)</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.UpdateBitmapTexture(System.Int32,System.Drawing.Bitmap)">
            <summary>
            Bitmapデータでの材質テクスチャ更新
            </summary>
            <param name="mx">材質Index</param>
            <param name="bmp">Bitmap:32bitARGBのみ</param>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.CreateEventListener(PXCPlugin.Event.IPXEventConnector,System.Int32[])">
            <summary>
            イベントリスナ作成
             指定した材質(複数可)を一つのイベント対象領域として設定
             既存リスナで既に対象となっている材質を指定した場合は以前の対象領域から除外(新規側有効)
            </summary>
            <param name="c">イベントコネクタ</param>
            <param name="materials">材質Index(複数指定可) | 空指定の場合は全材質対象</param>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.UIModel.IPXUIModel.ReleaseEventListener(PXCPlugin.Event.IPXUIModelEventListener)">
            <summary>
            イベントリスナ破棄
            </summary>
            <param name="listener">リスナ</param>
        </member>
        <member name="T:PXCPlugin.UIModel.PXUIModelHelper">
            <summary>UIモデル補助処理</summary>
        </member>
        <member name="T:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara">
            <summary>イベント設定用材質色パラメータ</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.MaterialIndex">
            <summary>材質Index</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.EnableDiffuse">
            <summary>Diffuse色の有効状態</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.EnableSpecular">
            <summary>Specular色の有効状態</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.EnableAmbient">
            <summary>Ambien色の有効状態</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.#ctor(System.Int32,PEPlugin.SDX.V4,PEPlugin.SDX.V4)">
            <summary>
            コンストラクタ | Diffuse色のみ有効
            </summary>
            <param name="mx">材質Index</param>
            <param name="difA"></param>
            <param name="difB"></param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.#ctor(System.Int32,PEPlugin.SDX.V4,PEPlugin.SDX.V4,PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            コンストラクタ | Diffuse色／Ambien色有効
            </summary>
            <param name="mx">材質Index</param>
            <param name="difA"></param>
            <param name="difB"></param>
            <param name="ambA"></param>
            <param name="ambB"></param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.#ctor(System.Int32,PEPlugin.Pmx.IPXPmx)">
            <summary>
            コンストラクタ | PMX指定(各色AにPMX側の設定で初期化／有効状態はOFF)
            </summary>
            <param name="mx">材質Index</param>
            <param name="pmx">PMX</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara.Clear">
            <summary>クリア</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.SetMouseOverColor(PXCPlugin.UIModel.IPXUIModel,PXCPlugin.Event.IPXUIModelEventListener,PXCPlugin.UIModel.PXUIModelHelper.MaterialColorEvPara[])">
            <summary>
            マウスオーバーによる材質色変化の設定(MouseEnter/MouseLeave イベント処理追加)
            </summary>
            <param name="uim">UIモデル</param>
            <param name="listener">イベントリスナ</param>
            <param name="para">材質色パラメータ | A->B</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.SetMouseDragMove(PXCPlugin.UIModel.IPXUIModel,PXCPlugin.Event.IPXUIModelEventListener,PXCPlugin.IPXViewControl)">
            <summary>
            マウスドラッグによるオブジェクト移動設定(イベント処理追加) | オブジェクトのワールド行列に仮想移動量を設定します
            (View制御を指定した場合は仮想カーソル位置を一時的に変更し位置調整を行います)
            </summary>
            <param name="uim">UIモデル</param>
            <param name="listener">イベントリスナ</param>
            <param name="viewCtrl">View制御(null可)</param>
        </member>
        <member name="T:PXCPlugin.UIModel.PXUIModelHelper.TextControl">
            <summary>テキスト制御クラス</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.TextControl.UIModel">
            <summary>UIモデル</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.TextControl.MaterialIndex">
            <summary>材質Index</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.TextControl.Image">
            <summary>Bitmapテクスチャデータ</summary>
        </member>
        <member name="F:PXCPlugin.UIModel.PXUIModelHelper.TextControl.BackColor">
            <summary>背景色</summary>
        </member>
        <member name="F:PXCPlugin.UIModel.PXUIModelHelper.TextControl.ForeColor">
            <summary>テキスト色</summary>
        </member>
        <member name="P:PXCPlugin.UIModel.PXUIModelHelper.TextControl.Font">
            <summary>フォント</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.#ctor(PXCPlugin.UIModel.IPXUIModel,System.Int32,System.Drawing.Bitmap)">
            <summary>
            コンストラクタ | TextControl.SetTextControl() による生成を推奨
            </summary>
            <param name="uim">UIモデル</param>
            <param name="mx">材質Index</param>
            <param name="bmp">Bitmapテクスチャデータ</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.Clear">
            <summary>画像クリア</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.DrawText(System.String,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            テキスト描画(左上(0,0)位置) | 画面側の更新には描画後に UpdateText() を呼ぶ必要あり
            </summary>
            <param name="text">文字列</param>
            <param name="br">ブラシ</param>
            <param name="f">フォント</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.DrawText(System.String,System.Drawing.Point,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            テキスト描画 | 画面側の更新には描画後に UpdateText() を呼ぶ必要あり
            </summary>
            <param name="text">文字列</param>
            <param name="pos">描画位置</param>
            <param name="br">ブラシ</param>
            <param name="f">フォント</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.DrawText(System.String,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            テキスト描画 | 画面側の更新には描画後に UpdateText() を呼ぶ必要あり
            </summary>
            <param name="text">文字列</param>
            <param name="rect">描画範囲</param>
            <param name="br">ブラシ</param>
            <param name="f">フォント</param>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.UpdateTextImage">
            <summary>テキスト描画画像の更新</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.TextControl.Dispose">
            <summary>破棄</summary>
        </member>
        <member name="M:PXCPlugin.UIModel.PXUIModelHelper.CreateTextControl(PXCPlugin.UIModel.IPXUIModel,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            テキスト制御クラスの生成 | 文字のアスペクト比は描画テクスチャと対象面のサイズ比により変化するので注意
            </summary>
            <param name="uim">UIモデル</param>
            <param name="mx">材質Index</param>
            <param name="width">幅(描画テクスチャサイズ)</param>
            <param name="height">高さ(描画テクスチャサイズ)</param>
            <param name="backCol">背景色</param>
            <param name="f">フォント(個別に設定可能)</param>
            <returns></returns>
        </member>
        <member name="T:PXCPlugin.IPXViewControl">
            <summary>View制御</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.UpdateView">
            <summary>描画更新</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.ClientSize">
            <summary>画面サイズ get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.ScreenPosition">
            <summary>View画面のスクリーン座標 get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.ViewMatrix">
            <summary>View行列 get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.ProjectionMatrix">
            <summary>Projection行列 get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.Viewport">
            <summary>Viewport(サイズのみ) get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.CameraRotateCenter">
            <summary>視点(回転中心) get/set</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.CameraTarget">
            <summary>カメラ対象 get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.CameraPosition">
            <summary>カメラ位置 get</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.CameraUpVector">
            <summary>カメラ上方向 get</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.SetCameraParameter(PEPlugin.SDX.V3,PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>
            カメラ設定
            </summary>
            <param name="target">視点対象</param>
            <param name="pos">視点位置</param>
            <param name="up">視点(上方向)</param>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.VCursorPosition">
            <summary>仮想カーソル位置 get/set</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.ViewAxis">
            <summary>スクリーン軸取得(X/Y/Z) get | PXCBridge.GetViewAxis(IPXCPluginConnector c) と同値</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.EnableVAxis">
            <summary>仮想軸有効状態 get/set</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.GetVAxis(PEPlugin.SDX.V3@,PEPlugin.SDX.V3@,PEPlugin.SDX.V3@)">
            <summary>仮想軸取得</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.SetVAxis(PEPlugin.SDX.V3,PEPlugin.SDX.V3,PEPlugin.SDX.V3)">
            <summary>仮想軸設定</summary>
        </member>
        <member name="P:PXCPlugin.IPXViewControl.VAxisOrigin">
            <summary>仮想軸中心 get/set</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.GetBodyVisibles">
            <summary>剛体の表示状態取得</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.SetBodyVisibles(System.Boolean[])">
            <summary>剛体の表示状態設定</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.GetJointVisibles">
            <summary>Jointの表示状態取得</summary>
        </member>
        <member name="M:PXCPlugin.IPXViewControl.SetJointVisibles(System.Boolean[])">
            <summary>Jointの表示状態設定</summary>
        </member>
        <member name="T:PXCPlugin.Event.IPXEventConnector">
            <summary>イベントコネクタ</summary>
        </member>
        <member name="M:PXCPlugin.Event.IPXEventConnector.CreateViewEventListener">
            <summary>
            Viewイベントリスナ生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:PXCPlugin.Event.IPXEventConnector.ReleaseViewEventListener(PXCPlugin.Event.IPXViewEventListener)">
            <summary>
            Viewイベントリスナ破棄
            </summary>
            <param name="l"></param>
        </member>
        <member name="T:PXCPlugin.Event.IPXViewEventListener">
            <summary>View_イベントリスナインターフェイス</summary>
        </member>
        <member name="T:PXCPlugin.Event.IPXUIModelEventListener">
            <summary>UIモデル_イベントリスナインターフェイス</summary>
        </member>
        <member name="M:PXCPlugin.Event.PXViewEventListener.#ctor(PXCPlugin.Event.PXEventConnector)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="T:PXCPlugin.Event.PXEventArgs">
            <summary>イベント引数</summary>
        </member>
        <member name="T:PXCPlugin.Event.PXEventArgs.ViewMouse">
            <summary>View_マウス関連共通イベント引数</summary>
        </member>
        <member name="P:PXCPlugin.Event.PXEventArgs.ViewMouse.VPoint">
            <summary>仮想座標</summary>
        </member>
        <member name="T:PXCPlugin.Event.PXEventArgs.UIModelMouse">
            <summary>UIモデル_マウス関連共通イベント引数</summary>
        </member>
        <member name="T:PXCPlugin.Event.PXEventArgs.UIModelMouseDrag">
            <summary>UIモデル_マウスドラッグイベント引数</summary>
        </member>
        <member name="P:PXCPlugin.Event.PXEventArgs.UIModelMouseDrag.StX">
            <summary>ドラッグ開始位置 : X</summary>
        </member>
        <member name="P:PXCPlugin.Event.PXEventArgs.UIModelMouseDrag.StY">
            <summary>ドラッグ開始位置 : Y</summary>
        </member>
        <member name="P:PXCPlugin.Event.PXEventArgs.UIModelMouseDrag.VDrag">
            <summary>仮想軸上での移動量</summary>
        </member>
        <member name="T:PXCPlugin.Event.PXEventArgs.ViewObjectSelected">
            <summary>View_オブジェクト選択イベント引数</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.WriteString_v2(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>文字列の書き込み</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.ReadString_v2(System.IO.Stream,System.Text.Encoding)">
            <summary>文字列の読み取り</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.WriteElement_Bool(System.IO.Stream,System.Boolean)">
            <summary>bool値の書き込み</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.ReadElement_Bool(System.IO.Stream)">
            <summary>bool値の読み込み</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.WriteElement_Int32(System.IO.Stream,System.Int32,System.Int32,System.Boolean)">
            <summary>
            int値の書き込み
            </summary>
            <param name="s"></param>
            <param name="data"></param>
            <param name="bufSize">1,2,4</param>
            <param name="signed">true:符号有り | short以下のみ</param>
        </member>
        <member name="M:PmxLib.StreamHelper.ReadElement_Int32(System.IO.Stream,System.Int32,System.Boolean)">
            <summary>
            int値の読み取り
            </summary>
            <param name="s"></param>
            <param name="bufSize">1,2,4</param>
            <param name="signed">true:符号有り | short以下のみ</param>
            <returns></returns>
        </member>
        <member name="M:PmxLib.StreamHelper.WriteElement_UInt(System.IO.Stream,System.UInt32)">
            <summary>uint値の書き込み</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.ReadElement_UInt(System.IO.Stream)">
            <summary>uint値の読み取り</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.WriteElement_Float(System.IO.Stream,System.Single)">
            <summary>float値の書き込み</summary>
        </member>
        <member name="M:PmxLib.StreamHelper.ReadElement_Float(System.IO.Stream)">
            <summary>float値の読み取り</summary>
        </member>
    </members>
</doc>
